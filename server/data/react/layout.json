{"meta":{"name":"@walmart/wmreact-layout","title":"Layout","description":"A set of layout components for hydra based UI","github":"https://gecgithub01.walmart.com/react/layout/","version":"7.2.0"},"imports":[{"ref":"Arrange","path":"components/arrange"},{"ref":"Collapsable","path":"components/collapsable"},{"ref":"Fixie","path":"components/fixie"},{"ref":"Grid","path":"components/grid"},{"ref":"Layout","path":"components/layout"},{"ref":"clientWidth","path":"components/helpers/client-width"},{"ref":"layoutHelper","path":"components/helpers/layout-helper"},{"ref":"JSMediaSelector","path":"components/js-media-selector"},{"ref":"MediaSelector","path":"components/media-selector"},{"ref":"CSSMediaSelector","path":"components/css-media-selector"},{"ref":"Stack","path":"components/stack"}],"components":[{"title":"Stack","examples":[{"type":"playground","code":"<Stack>\n  <Stack.Fill>Foo</Stack.Fill>\n  <Stack.Fit>Foo</Stack.Fit>\n</Stack>\n","noRender":true}]},{"title":"Arrange","examples":[{"type":"playground","code":"<div>\n  <h4>Arrange</h4>\n  <Arrange>\n    <Arrange.Fill>Fill</Arrange.Fill>\n    <Arrange.Fit>Fit</Arrange.Fit>\n  </Arrange>\n  <h4>Arrange Fit All</h4>\n  <Arrange.FitAll>\n    <div style={{background: '#ccc', padding: '1rem'}}>A</div>\n    <div style={{background: '#aaa', padding: '1rem'}}>B</div>\n    <div style={{background: '#ccc', padding: '1rem'}}>C</div>\n  </Arrange.FitAll>\n</div>\n","noRender":true}]},{"title":"Grid","examples":[{"type":"playground","code":"<div>\n  <Grid.GroupChildren classes=\"my-column\" columns={2}>\n    <div>A</div><div>B</div><div>C</div>\n  </Grid.GroupChildren>\n  <Grid.ApplyClasses classes=\"foo bar\">\n    <div>A</div><div>B</div><div>C</div>\n  </Grid.ApplyClasses>\n  <Grid>\n    <div>A</div>\n  </Grid>\n</div>\n","noRender":true}]},{"title":"Collapsable","examples":[{"type":"playground","code":"var CollapsableExample = React.createClass({\n  getInitialState() {\n    return {\n      open: false\n    }\n  },\n  expandToggle() {\n    this.setState({\n      open: this.state.open ? false : true\n    })\n  },\n  render() {\n  return (\n      <div>\n        <Collapsable isOpen={this.state.open}>\n          <div>\n            <p style={{margin: 0}}>Hi!</p>\n          </div>\n        </Collapsable>\n        <a href=\"javascript:void(0)\" onClick={this.expandToggle}>\n          {this.state.open ? 'Collapse' : 'Expand'}\n        </a>\n      </div>\n    )\n  }\n});\n\nReact.render(<CollapsableExample/>, mountNode);\n","noRender":false}]},{"title":"Fixie","examples":[{"type":"playground","code":"<div>\n  <Fixie>\n    <p>Fixed when you scroll past</p>\n  </Fixie>\n\n  <Fixie fixedAtBottom={true}>\n    <p>Fixed when you scroll past the bottom</p>\n  </Fixie>\n\n  <Fixie fixedContent={<div>Different content when fixed</div>}>\n    <p>Content when not fixed</p>\n  </Fixie>\n\n  <Fixie cssMode={true}>\n    <p style={{ margin: 0, textAlign: \"right\" }}>Content fixed with CSS mode</p>\n  </Fixie>\n</div>\n","noRender":true}]},{"title":"Layout","examples":[{"title":"Two Column","type":"playground","code":"<Layout medium={2} x-small={1} padded={true}>\n  <div style={{background:'#ccc',padding:'1rem'}}>Left</div>\n  <div style={{background:'#aaa',padding:'1rem'}}>Right</div>\n</Layout>\n","noRender":true},{"title":"Three Column","type":"playground","code":"<Layout medium-sizes={[3,6,3]} x-small={1} padded={true}>\n  <div style={{background:'#ccc',padding:'1rem'}}>Left</div>\n  <div style={{background:'#aaa',padding:'1rem'}}>Content</div>\n  <div style={{background:'#ccc',padding:'1rem'}}>Right</div>\n</Layout>\n","noRender":true}],"options":{"synonyms":["responsive"]}},{"title":"MediaSelector","examples":[{"type":"playground","code":"<MediaSelector mode=\"hide\">\n  <div visibleWidths={['small']}>Currently in small</div>\n  <div visibleWidths={['medium']}>Currently in medium</div>\n  <div visibleWidths={['large']}>Currently in large</div>\n  <div visibleWidths={['x-large']}>Currently in x-large</div>\n  <div visibleWidths={['xx-large']}>Currently in xx-large</div>\n  <hr/>\n\n  <div visibleAbove='small'>visibleAbove: Visible in Medium and above</div>\n  <div visibleAbove='medium'>visibleAbove: Visible in Large and above</div>\n  <hr/>\n\n  <div visibleAtOrAbove='medium'>visibleAtOrAbove: Visible in Medium and above</div>\n  <div visibleAtOrAbove='large'>visibleAtOrAbove: Visible in Large and above</div>\n  <hr/>\n\n  <div visibleBelow='medium'>visibleBelow: Visible in Small</div>\n  <div visibleBelow='large'>visibleBelow: Visible in Small and Medium</div>\n  <hr/>\n\n  <div visibleAtOrBelow='small'>visibleAtOrBelow: Visible in Small</div>\n  <div visibleAtOrBelow='medium'>visibleAtOrBelow: Visible in Small and Medium</div>\n  <hr/>\n\n  <div hiddenAbove='small'>hiddenAbove: Visible in Small</div>\n  <div hiddenAbove='medium'>hiddenAbove: Visible in Small and Medium</div>\n  <hr/>\n\n  <div hiddenAtOrAbove='medium'>hiddenAtOrAbove: Visible in Small</div>\n  <div hiddenAtOrAbove='large'>hiddenAtOrAbove: Visible in Small and Medium</div>\n  <hr/>\n\n  <div hiddenBelow='medium'>hiddenBelow: Visible above Small</div>\n  <div hiddenBelow='large'>hiddenBelow: Visible above Medium</div>\n  <hr/>\n\n  <div hiddenAtOrBelow='medium'>hiddenAtOrAbove: Visible in Large</div>\n  <div hiddenAtOrBelow='large'>hiddenAtOrAbove: Visible above Large</div>\n</MediaSelector>\n","noRender":true}],"options":{"synonyms":["responsive"]}},{"title":"CSSMediaSelector","examples":[{"type":"playground","code":"<CSSMediaSelector mode=\"hide\">\n  <div visibleWidths={['small']}>Currently in small</div>\n  <div visibleWidths={['medium']}>Currently in medium</div>\n  <div visibleWidths={['large']}>Currently in large</div>\n  <div visibleWidths={['x-large']}>Currently in x-large</div>\n  <div visibleWidths={['xx-large']}>Currently in xx-large</div>\n  <hr/>\n\n  <div visibleAbove='small'>visibleAbove: Visible in Medium and above</div>\n  <div visibleAbove='medium'>visibleAbove: Visible in Large and above</div>\n  <hr/>\n\n  <div visibleAtOrAbove='medium'>visibleAtOrAbove: Visible in Medium and above</div>\n  <div visibleAtOrAbove='large'>visibleAtOrAbove: Visible in Large and above</div>\n  <hr/>\n\n  <div visibleBelow='medium'>visibleBelow: Visible in Small</div>\n  <div visibleBelow='large'>visibleBelow: Visible in Small and Medium</div>\n  <hr/>\n\n  <div visibleAtOrBelow='small'>visibleAtOrBelow: Visible in Small</div>\n  <div visibleAtOrBelow='medium'>visibleAtOrBelow: Visible in Small and Medium</div>\n  <hr/>\n\n  <div hiddenAbove='small'>hiddenAbove: Visible in Small</div>\n  <div hiddenAbove='medium'>hiddenAbove: Visible in Small and Medium</div>\n  <hr/>\n\n  <div hiddenAtOrAbove='medium'>hiddenAtOrAbove: Visible in Small</div>\n  <div hiddenAtOrAbove='large'>hiddenAtOrAbove: Visible in Small and Medium</div>\n  <hr/>\n\n  <div hiddenBelow='medium'>hiddenBelow: Visible above Small</div>\n  <div hiddenBelow='large'>hiddenBelow: Visible above Medium</div>\n  <hr/>\n\n  <div hiddenAtOrBelow='medium'>hiddenAtOrAbove: Visible in Large</div>\n  <div hiddenAtOrBelow='large'>hiddenAtOrAbove: Visible above Large</div>\n</CSSMediaSelector>\n","noRender":true}],"options":{"synonyms":["responsive"]}}],"usage":["https://gecgithub01.walmart.com/react/state-chooser","https://gecgithub01.walmart.com/R-search-category/category-utils","https://gecgithub01.walmart.com/react/questions","https://gecgithub01.walmart.com/react/gift-card-balance","https://gecgithub01.walmart.com/react/morsov","https://gecgithub01.walmart.com/react/product-app","https://gecgithub01.walmart.com/electrode/tempo-core","https://gecgithub01.walmart.com/react/store-finder-carousel","https://gecgithub01.walmart.com/react/auth","https://gecgithub01.walmart.com/react/accordion","https://gecgithub01.walmart.com/react/address-form","https://gecgithub01.walmart.com/react/search-util-bar","https://gecgithub01.walmart.com/react/base","https://gecgithub01.walmart.com/react/product-image-carousel"]}