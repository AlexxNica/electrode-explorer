{"meta":{"name":"@walmart/wmreact-containers","title":"Containers","description":"A set of container components for hydra based UI","github":"https://gecgithub01.walmart.com/react/containers/","version":"11.0.0"},"imports":[{"ref":"Expander","path":"components/expander"},{"ref":"Flyout","path":"components/flyout"},{"ref":"FlyoutMagic","path":"components/flyout-magic"},{"ref":"Meter","path":"components/meter"},{"ref":"Modal","path":"components/modal"},{"ref":"Separator","path":"components/separator"},{"ref":"Shelf","path":"components/shelf"},{"ref":"Spinner","path":"components/spinner"},{"ref":"Tray","path":"components/tray"},{"ref":"Well","path":"components/well"},{"ref":"SlidePanel","path":"components/slidepanel"},{"ref":"ResponsiveFlyoutSlidePanel","path":"components/responsive-flyout-slidepanel"}],"components":[{"title":"Expander","examples":[{"type":"playground","code":"<Expander expandText=\"Expand\">\n  <h1>Expanded!</h1>\n</Expander>","noRender":true}],"options":{"image":"./images/Expander.png"}},{"title":"Flyout","examples":[{"type":"playground","code":"<div>\n  <div>\n    <Flyout triggerText=\"Fly out default!\" direction=\"top\">\n      <h1>It flew out!</h1>\n    </Flyout>\n  </div>\n  <br/>\n  <div>\n    <Flyout trigger={<button className=\"btn\">Flyout with a custom trigger click handler</button>}\n    onTriggerElementClick={() => {console.log(\"You clicked the trigger element\")}}\n    direction=\"right\" active>\n      <h1>It flew out!</h1>\n    </Flyout>\n  </div>\n  <br/>\n  <div>\n    <Flyout trigger={<a href=\"http://www.walmart.com\">test link</a>}\n    direction=\"right\" disableTouchLinksOnly={true}>\n      <h1>It flew out!</h1>\n    </Flyout>\n  </div>\n  <br/>\n  <div>\n    <Flyout triggerText=\"Fly out center w/ close button\"\n      direction=\"center\" align=\"center\" closeButton>\n      <h1>It flew out!</h1>\n    </Flyout>\n  </div>\n  <br/>\n  <div>\n    <Flyout triggerText=\"Initially open flyout\" active>\n      <h1>Go!</h1>\n    </Flyout>\n  </div>\n  <br/>\n  <div>\n    <Flyout triggerText=\"Fly out hover!\" direction=\"bottom\" hover={true}>\n      <h1>It flew out!</h1>\n    </Flyout>\n  </div>\n</div>\n","noRender":true}],"options":{"image":"./images/Flyout.png"}},{"title":"Magic Flyout","examples":[{"type":"playground","code":"<div>\n  <FlyoutMagic trigger={({toggle}) => <button className=\"btn\" onClick={toggle}>X</button>}>\n  \t<div>Magic Flyout!</div>\n  </FlyoutMagic>\n  <br />\n  <br />\n  <FlyoutMagic hover trigger={({show}) => {\n      return (\n        <button className=\"btn\" style={{ position: \"relative\", zIndex: 1 }} onMouseEnter={show}>\n          X\n        </button>\n      );\n    }}>\n  \t<div>Magic Flyout Hover!</div>\n  </FlyoutMagic>\n</div>\n","noRender":true}]},{"title":"SlidePanel","examples":[{"type":"playground","code":"var SlidePanelExample = React.createClass({\n\t_toggleSlidePanel() {\n\t\tvar slidePanel = this.refs.jsSlidePanel;\n    slidePanel.toggleSlidePanel();\n\t},\n  render() {\n    return(<div>\n    \t<button type=\"button\" onClick={this._toggleSlidePanel} >Open Slide Panel</button>\n      <SlidePanel ref=\"jsSlidePanel\" direction=\"right\" onClose={() => console.log(\"foo\")}>\n        &nbsp;Slide panel content goes here.\n      </SlidePanel>\n      </div>)\n  }\n});\n\nReact.render(<SlidePanelExample/>, mountNode);\n","noRender":false}]},{"title":"Responsive Flyout Slidepanel","examples":[{"type":"playground","code":"<ResponsiveFlyoutSlidePanel\n  flyoutDirection=\"right\"\n  flyoutSize=\"wide\"\n  trigger={(<span className=\"HelpFlyout-trigger\">\n          <i className=\"wmicon wmicon-help hide-content-max-m\"></i>\n          <span className=\"hide-content-m\">Help trigger mobile</span>\n        </span>)}\n>\n  <div>Flyout content goes here</div>\n</ResponsiveFlyoutSlidePanel>\n","noRender":true}]},{"title":"Spinner","examples":[{"type":"playground","code":"var SpinnerExample = React.createClass({\n  render() {\n    return(\n      <Flyout triggerText='Click' direction='top'>\n        <div className='spinner-demo'>\n          <Spinner loading={true} fixed={false}/>\n        </div>\n      </Flyout>)\n  }\n});\n\nReact.render(<SpinnerExample/>, mountNode);\n","noRender":false}],"options":{"synonyms":["loading"],"image":"./images/Spinner.gif"}},{"title":"Meter","examples":[{"type":"playground","code":"<div style={{height: 100}}>\n  <Meter percent={50}/>\n  <Meter.PercentageCircle percent={50}/>\n</div>\n","noRender":true}],"options":{"image":"./images/Meter.png"}},{"title":"Modal","examples":[{"type":"playground","code":"var ModalExample = React.createClass({\n  showModal() {\n    this.refs.modal.show();\n  },\n  render() {\n  return (\n      <div>\n        <Modal ref=\"modal\" fixed={true}>\n          <h1>Hi!</h1>\n        </Modal>\n        <a href=\"javascript:void(0)\" onClick={this.showModal}>\n          Show Modal\n        </a>\n      </div>\n    )\n  }\n});\n\nReact.render(<ModalExample/>, mountNode);\n","noRender":false}],"options":{"synonyms":["dialog"]}},{"title":"Separator","examples":[{"type":"playground","code":"<div>\n  <Separator/>\n  <Separator type=\"heavy\"/>\n  <Separator type=\"alt\"/>\n  <Separator type=\"dotted\"/>\n</div>","noRender":true}]},{"title":"Shelf","examples":[{"type":"playground","code":"<div style={{height: 100}}>\n  <Shelf>This is a Shelf</Shelf>\n</div>\n","noRender":true}]},{"title":"Tray","examples":[{"type":"playground","code":"var TrayExample = React.createClass({\n  showTray() {\n    this.refs.tray.openTray();\n  },\n  render() {\n  return (\n      <div>\n        <Tray ref=\"tray\"\n          isOpen={false}>\n          <h1>Hi!</h1>\n        </Tray>\n        <a href=\"javascript:void(0)\" onClick={this.showTray}>\n          Show Tray\n        </a>\n      </div>\n    )\n  }\n});\n\nReact.render(<TrayExample/>, mountNode);","noRender":false}],"options":{"image":"./images/Tray.png"}},{"title":"Well","examples":[{"type":"playground","code":"<Well padded={true}>\n  <p>Well</p>\n</Well>","noRender":true}],"options":{"image":"./images/Well.png"}}],"usage":["https://gecgithub01.walmart.com/react/facets","https://gecgithub01.walmart.com/react/questions","https://gecgithub01.walmart.com/react/gift-card-balance","https://gecgithub01.walmart.com/react/morsov","https://gecgithub01.walmart.com/react/product-app","https://gecgithub01.walmart.com/react/auto-part-finder","https://gecgithub01.walmart.com/react/shipping-pass","https://gecgithub01.walmart.com/react/store-finder-carousel","https://gecgithub01.walmart.com/react/calendar","https://gecgithub01.walmart.com/react/order-summary","https://gecgithub01.walmart.com/react/search-util-bar","https://gecgithub01.walmart.com/react/product-offers","https://gecgithub01.walmart.com/react/gift-card","https://gecgithub01.walmart.com/react/credit-card"]}