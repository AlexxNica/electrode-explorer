{
  "library": "@walmart/search-util-bar",
  "description": "search util bar",
  "components": [
    {
      "displayName": "SearchUtilBarBrand",
      "methods": [
        {
          "name": "buildChoices",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": null
        },
        {
          "name": "_onChange",
          "docblock": null,
          "modifiers": [],
          "params": [
            {
              "name": "ev",
              "type": null
            },
            {
              "name": "i",
              "type": null
            }
          ],
          "returns": null
        }
      ],
      "props": {
        "choices": {
          "type": {
            "name": "array"
          },
          "required": false,
          "defaultValue": {
            "value": "[]",
            "computed": false
          },
          "description": ""
        },
        "onChange": {
          "type": {
            "name": "func"
          },
          "required": false,
          "description": ""
        }
      },
      "fileName": "./src/components/utilbar-brand.jsx",
      "description": "The brand component flyout.\n For example this is how we use this component.\n ```jsx\n <Brand\n onChange={(ev)=>{console.log(ev)}}\n choices={[\n   {\n      \"name\":\"Samsung\",\n      \"url\":\"cat_id=0&prg=desktop&facet=brand:Samsung\",\n      \"itemCount\":4862,\n      \"expandOnLoad\":true\n   },\n   {\n      \"name\":\"Apple\",\n      \"url\":\"cat_id=0&prg=desktop&facet=brand:Apple\",\n      \"itemCount\":494,\n      \"expandOnLoad\":true,\n      \"isSelected\": true\n   },\n   {\n      \"name\":\"Better Homes and Gardens\",\n      \"url\":\"cat_id=0&prg=desktop&facet=brand:Better%20Homes%20and%20Gardens\",\n      \"itemCount\":2962,\n      \"expandOnLoad\":true\n   }\n  ]}/>\n ```",
      "import": "{Brand}",
      "component": "Brand",
      "playground": [
        {
          "title": "Search-Util-Bar-Brand",
          "flags": {},
          "code": " <Brand\n onChange={(ev)=>{console.log(ev)}}\n choices={[\n   {\n      \"name\":\"Samsung\",\n      \"url\":\"cat_id=0&prg=desktop&facet=brand:Samsung\",\n      \"itemCount\":4862,\n      \"expandOnLoad\":true\n   },\n   {\n      \"name\":\"Apple\",\n      \"url\":\"cat_id=0&prg=desktop&facet=brand:Apple\",\n      \"itemCount\":494,\n      \"expandOnLoad\":true,\n      \"isSelected\": true\n   },\n   {\n      \"name\":\"Better Homes and Gardens\",\n      \"url\":\"cat_id=0&prg=desktop&facet=brand:Better%20Homes%20and%20Gardens\",\n      \"itemCount\":2962,\n      \"expandOnLoad\":true\n   }\n  ]}/>\n "
        }
      ],
      "hasProps": true
    },
    {
      "displayName": "SearchUtilBarPrice",
      "methods": [
        {
          "name": "_clearPriceRange",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": null
        },
        {
          "name": "_updatePriceRange",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": null
        },
        {
          "name": "_onInputChange",
          "docblock": null,
          "modifiers": [],
          "params": [
            {
              "name": "type",
              "type": null
            }
          ],
          "returns": null
        }
      ],
      "props": {
        "min": {
          "type": {
            "name": "number"
          },
          "required": false,
          "defaultValue": {
            "value": "null",
            "computed": false
          },
          "description": ""
        },
        "max": {
          "type": {
            "name": "number"
          },
          "required": false,
          "defaultValue": {
            "value": "null",
            "computed": false
          },
          "description": ""
        },
        "currency": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"usd\"",
            "computed": false
          },
          "description": ""
        },
        "onChange": {
          "type": {
            "name": "func"
          },
          "required": false,
          "description": ""
        }
      },
      "fileName": "./src/components/utilbar-price.jsx",
      "description": "The price component flyout.\n For example this is how we use this component.\n ```jsx\n <Price\n  onChange={(range)=> {console.log(range)}}\n />\n ```",
      "import": "{Price}",
      "component": "Price",
      "playground": [
        {
          "title": "Search-Util-Bar-Price",
          "flags": {},
          "code": " <Price\n  onChange={(range)=> {console.log(range)}}\n  />\n "
        }
      ],
      "hasProps": true
    },
    {
      "displayName": "SearchUtilBarSort",
      "methods": [
        {
          "name": "_onChange",
          "docblock": null,
          "modifiers": [],
          "params": [
            {
              "name": "option",
              "type": null
            }
          ],
          "returns": null
        }
      ],
      "props": {
        "currentSortValue": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": ""
        },
        "options": {
          "type": {
            "name": "array"
          },
          "required": true,
          "description": ""
        },
        "onChange": {
          "type": {
            "name": "func"
          },
          "required": false,
          "description": ""
        }
      },
      "fileName": "./src/components/utilbar-sort.jsx",
      "description": "The sort component flyout.\n For example this is how we use this component.\n ```jsx\n <Sort\n  currentSortValue=\"price_high\"\n  options={options}\n  onChange={(ev)=> {console.log(ev)}}\n />\n ```",
      "import": "{Sort}",
      "component": "Sort",
      "playground": [
        {
          "title": "Search-Util-Bar-Sort",
          "flags": {},
          "code": " <Sort\n  currentSortValue=\"price_high\"\n  options={options}\n  onChange={(ev)=> {console.log(ev)}}\n  />\n "
        }
      ],
      "hasProps": true
    },
    {
      "displayName": "SearchUtilBarStoreAvailability",
      "methods": [
        {
          "name": "fetchStoreLocation",
          "docblock": null,
          "modifiers": [],
          "params": [
            {
              "name": "ev",
              "type": null
            }
          ],
          "returns": null
        },
        {
          "name": "_onEnterPressed",
          "docblock": null,
          "modifiers": [],
          "params": [
            {
              "name": "e",
              "type": null
            }
          ],
          "returns": null
        },
        {
          "name": "_onToggleSelectedStore",
          "docblock": null,
          "modifiers": [],
          "params": [
            {
              "name": "e",
              "type": null
            }
          ],
          "returns": null
        },
        {
          "name": "_onToggleSelectedAllStore",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": null
        },
        {
          "name": "_onToggleOnlineOnly",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": null
        },
        {
          "name": "setLocationVisible",
          "docblock": null,
          "modifiers": [],
          "params": [
            {
              "name": "ev",
              "type": null
            }
          ],
          "returns": null
        },
        {
          "name": "_getStoreList",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": null
        },
        {
          "name": "_getCurrentLocation",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": null
        },
        {
          "name": "_getStoresScreen",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": null
        },
        {
          "name": "_getWelcomeScreen",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": null
        }
      ],
      "props": {
        "location": {
          "type": {
            "name": "any"
          },
          "required": false,
          "description": ""
        },
        "selectedStores": {
          "type": {
            "name": "array"
          },
          "required": false,
          "description": ""
        },
        "nearbyStores": {
          "type": {
            "name": "array"
          },
          "required": false,
          "description": ""
        },
        "onFetchStores": {
          "type": {
            "name": "func"
          },
          "required": false,
          "description": ""
        },
        "onFetchPreso": {
          "type": {
            "name": "func"
          },
          "required": false,
          "description": ""
        }
      },
      "fileName": "./src/components/utilbar-store-availability.jsx",
      "description": "The Store component flyout.\n For example this is how we use this component.\n ```jsx\n <Store\n  nearbyStores={nearbyStores}\n  selectedStores={[\"5435\", \"2486\", \"5884\"]}\n  location={location}\n  onFetchStores={(location)=>{console.log(location)}}\n  onFetchPreso={(event)=>{console.log(event)}}\n />\n ```",
      "import": "{Store}",
      "component": "Store",
      "playground": [
        {
          "title": "Search-Util-Bar-Store",
          "flags": {},
          "code": " <Store\n  nearbyStores={nearbyStores}\n  selectedStores={[\"5435\", \"2486\", \"5884\"]}\n  location={location}\n  onFetchStores={(location)=>{console.log(location)}}\n  onFetchPreso={(event)=>{console.log(event)}}\n  />\n "
        }
      ],
      "hasProps": true
    },
    {
      "displayName": "SearchUtilBarSwitcher",
      "methods": [
        {
          "name": "_handleViewSwitch",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": null
        }
      ],
      "props": {
        "isGridView": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": ""
        },
        "onChange": {
          "type": {
            "name": "func"
          },
          "required": false,
          "description": ""
        }
      },
      "fileName": "./src/components/utilbar-switcher.jsx",
      "description": "The Switcher component flyout.\n For example this is how we use this component.\n ```jsx\n <Switcher\n   isGridView={false}\n   onChange={(showGrid)=> {console.log(showGrid)}}\n />\n ```",
      "import": "{Switcher}",
      "component": "Switcher",
      "playground": [
        {
          "title": "Search-Util-Bar-Switcher",
          "flags": {},
          "code": " <Switcher\n   isGridView={false}\n   onChange={(showGrid)=> {console.log(showGrid)}}\n  />\n "
        }
      ],
      "hasProps": true
    },
    {
      "description": "",
      "displayName": "SearchUtilBar",
      "methods": [],
      "props": {
        "min": {
          "type": {
            "name": "number"
          },
          "required": false,
          "description": ""
        },
        "max": {
          "type": {
            "name": "number"
          },
          "required": false,
          "description": ""
        },
        "currency": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": ""
        },
        "onChangePrice": {
          "type": {
            "name": "func"
          },
          "required": false,
          "description": ""
        },
        "brandChoices": {
          "type": {
            "name": "array"
          },
          "required": false,
          "description": ""
        },
        "onChangeBrand": {
          "type": {
            "name": "func"
          },
          "required": false,
          "description": ""
        },
        "location": {
          "type": {
            "name": "any"
          },
          "required": false,
          "description": ""
        },
        "selectedStores": {
          "type": {
            "name": "array"
          },
          "required": false,
          "description": ""
        },
        "nearbyStores": {
          "type": {
            "name": "array"
          },
          "required": false,
          "description": ""
        },
        "onFetchStores": {
          "type": {
            "name": "func"
          },
          "required": false,
          "description": ""
        },
        "onFetchPreso": {
          "type": {
            "name": "func"
          },
          "required": false,
          "description": ""
        },
        "currentSortValue": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": ""
        },
        "sortOptions": {
          "type": {
            "name": "array"
          },
          "required": false,
          "description": ""
        },
        "onChangeSort": {
          "type": {
            "name": "func"
          },
          "required": false,
          "description": ""
        },
        "isGridView": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": ""
        },
        "onChangeSwitcher": {
          "type": {
            "name": "func"
          },
          "required": false,
          "description": ""
        }
      },
      "fileName": "./src/components/search-util-bar.jsx",
      "hasProps": true
    }
  ]
}