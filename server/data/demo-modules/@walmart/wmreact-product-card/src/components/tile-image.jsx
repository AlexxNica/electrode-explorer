/**
 * TileImage
 *
 * @API:
 <TileImage
   className="product-img"
   isLazy={this.props.lazyLoad}
   imgUrl={this.props.imgUrl}
   imgAlt={this.props.title}
   width={Constant.PRODUCT_IMG_SIZE}
   height={Constant.PRODUCT_IMG_SIZE}
 />
 */
import React from "react";
import { checkImageSrc } from "@walmart/wmreact-image-utils";

/**
 * This is the cdn version of default spacer image
 * taken from http://www.walmart.com/static/gen/js/config-map.js
 * Currently we dont have any way to hook into assets.json
 * which is generated by old build process.
 * This image won't be changed ever. But If there is any upgrade
 * its version will change so we can still use the v1.
 * Also this image will be in cache alreay.
 */
const DEFAULT_SPACER_IMAGE
    = "//i5.walmartimages.com/dfw/63fd9f59-33e4/k2-_1255bd77-c218-4f2a-99ce-14731eeaa110.v1.gif";

export default class TileImage extends React.Component {
  render(): ReactElement {
    const props = this.props;
    const imageSize = {width: props.width, height: props.height};
    let imgProps;
    let torbitUrl;
    //TODO: remove the weird === "null", when preso fix it
    if (!props.imgUrl || props.imgUrl === "null") { return null; }

    imgProps = {
      className: props.className,
      width: props.width,
      height: props.height,
      alt: props.imgAlt,
      src: DEFAULT_SPACER_IMAGE
    };

    torbitUrl = checkImageSrc(props.imgUrl, imageSize.width, imageSize.height);

    if (props.isLazy) {
      imgProps.src = DEFAULT_SPACER_IMAGE;
    } else {
      imgProps.src = torbitUrl;
    }

    return <img {...imgProps} />;
  }
}

TileImage.displayName = "TileImage";
TileImage.propTypes = {
  /**
    Product Image Url
  */
  "imgUrl": React.PropTypes.string.isRequired,
  /**
    Class name
  */
  "className": React.PropTypes.string,
  /**
    A flag to determine if Lazyloading is enabled
  */
  "isLazy": React.PropTypes.bool,
  /**
    A flag to determine whether torbit is enabled
  */
  "useTorbit": React.PropTypes.bool,
  /**
    Image alt attribute
  */
  "imgAlt": React.PropTypes.string,
  /**
    Image Height
  */
  "height": React.PropTypes.number,
  /**
    Image Width
  */
  "width": React.PropTypes.number,
  /**
    data url name
  */
  "dataUrlName": React.PropTypes.string
};

TileImage.defaultProps = {
  className: "Tile-img",
  isLazy: false,
  useTorbit: false,
  imgUrl: null,
  imgAlt: "image",
  height: 144,
  width: 144,
  dataUrlName: "data-lazy"
};

export default TileImage;
