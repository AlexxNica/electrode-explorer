{
  "library": "@walmart/store-finder-carousel",
  "description": "Carousel for finding nearby stores",
  "components": [
    {
      "description": "",
      "methods": [],
      "props": {
        "toggleSearching": {
          "type": {
            "name": "func"
          },
          "required": false,
          "defaultValue": {
            "value": "noop()",
            "computed": true
          },
          "description": ""
        },
        "isSearching": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": ""
        },
        "zip": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"\"",
            "computed": false
          },
          "description": ""
        },
        "onSearch": {
          "type": {
            "name": "func"
          },
          "required": false,
          "defaultValue": {
            "value": "noop()",
            "computed": true
          },
          "description": ""
        }
      },
      "fileName": "./src/components/zip-finder.jsx",
      "hasProps": true
    },
    {
      "description": "",
      "methods": [],
      "props": {
        "onClick": {
          "type": {
            "name": "func"
          },
          "required": false,
          "defaultValue": {
            "value": "noop()",
            "computed": true
          },
          "description": ""
        },
        "shouldLink": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "true",
            "computed": false
          },
          "description": ""
        },
        "isMyStore": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": ""
        },
        "store": {
          "type": {
            "name": "shape",
            "value": {
              "id": {
                "name": "number",
                "required": false
              },
              "address": {
                "name": "shape",
                "value": {
                  "city": {
                    "name": "string",
                    "required": false
                  },
                  "address1": {
                    "name": "string",
                    "required": false
                  }
                },
                "required": false
              }
            }
          },
          "required": true,
          "description": ""
        }
      },
      "fileName": "./src/components/store-tile.jsx",
      "hasProps": true
    },
    {
      "description": "",
      "methods": [
        {
          "name": "_renderZip",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": null
        },
        {
          "name": "_renderShowOrHideLink",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": null
        },
        {
          "name": "_renderCarousel",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": null
        }
      ],
      "props": {
        "stores": {
          "type": {
            "name": "arrayOf",
            "value": {
              "name": "shape",
              "value": {
                "id": {
                  "name": "number",
                  "required": false
                },
                "address": {
                  "name": "shape",
                  "value": {
                    "city": {
                      "name": "string",
                      "required": false
                    },
                    "address1": {
                      "name": "string",
                      "required": false
                    }
                  },
                  "required": false
                }
              }
            }
          },
          "required": false,
          "defaultValue": {
            "value": "[]",
            "computed": false
          },
          "description": "The array of stores to loop over. It's expected that these arrive in the shape\nreturned by the GSF endpoint: https://confluence.walmart.com/display/PGGSF/Response+Json"
        },
        "onChange": {
          "type": {
            "name": "func"
          },
          "required": false,
          "defaultValue": {
            "value": "noop()",
            "computed": true
          },
          "description": "Callback to be fired when user selects a store. It's passed the ID of the new store."
        },
        "onZipChange": {
          "type": {
            "name": "func"
          },
          "required": false,
          "defaultValue": {
            "value": "noop()",
            "computed": true
          },
          "description": "Callback to be fired when user enters a new zip to search near. It's passed the new zip."
        },
        "filterDecorators": {
          "type": {
            "name": "func"
          },
          "required": false,
          "defaultValue": {
            "value": "() => true",
            "computed": false
          },
          "description": "Callback to restrict what navigation UI is shown: hairline arrows, dots, etc.\nBy default, the carousel shows all the \"decorators\" (UI elements) present in\ngecgithub01.walmart.com/react/carousel/blob/master/src/components/carousel-decorators.jsx,\nbut consumers can pick and choose decorators by providing this arbitrary filtering function."
        },
        "toggleVisibility": {
          "type": {
            "name": "func"
          },
          "required": false,
          "defaultValue": {
            "value": "noop()",
            "computed": true
          },
          "description": "Callback to handle showing/hiding carousel; see `props.isVisible`."
        },
        "onMount": {
          "type": {
            "name": "func"
          },
          "required": false,
          "defaultValue": {
            "value": "noop()",
            "computed": true
          },
          "description": "Callback to alert parent container when mounted (e.g., for data fetching)"
        },
        "toggleSearching": {
          "type": {
            "name": "func"
          },
          "required": false,
          "defaultValue": {
            "value": "noop()",
            "computed": true
          },
          "description": "Callback to alert parent container to toggle between zip display/search mode."
        },
        "loading": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": "Governs whether to show spinner or not. If `loading` is true, no carousel will\nbe rendered, even if `stores` contains store objects."
        },
        "isVisible": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "true",
            "computed": false
          },
          "description": "Governs 1.) whether carousel will be visible and 2.) whether UI text will read\n\"Show\" or \"Hide.\""
        },
        "isSearchingForZip": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": "Governs whether zip UI will show search box/button or current zip."
        },
        "zip": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"\"",
            "computed": false
          },
          "description": "Zip code to be displayed in the upper left in the format, \"Stores near {zip}.\"\nIf no zip is provided, no zip-related UI will appear."
        },
        "currentStore": {
          "type": {
            "name": "number"
          },
          "required": false,
          "description": "Store ID to treat as \"current.\" Current stores aren't hyperlinked or clickable."
        },
        "myStore": {
          "type": {
            "name": "number"
          },
          "required": false,
          "description": "Store ID to highlight as \"My Store\" with a gold star."
        },
        "carouselConfig": {
          "type": {
            "name": "object"
          },
          "required": false,
          "defaultValue": {
            "value": "{\n  framePadding: \"35\",\n  responsive: [{\n    selectors: [\"x-small\", \"small\", \"medium\", \"large\", \"x-large\", \"xx-large\"],\n    settings: { slidesToShow: 7, slidesToScroll: 6 }\n  }]\n}",
            "computed": false
          },
          "description": "All values namespaced under `carouselConfig` are passed through to the underlying `Carousel`:\nhttps://gecgithub01.walmart.com/react/carousel/blob/master/src/components/carousel.jsx\n\n`propTypes` left intentionally vague (no `shape`) because that's Carousel's decision."
        }
      },
      "fileName": "./src/components/store-finder-carousel.jsx",
      "hasProps": true
    }
  ]
}