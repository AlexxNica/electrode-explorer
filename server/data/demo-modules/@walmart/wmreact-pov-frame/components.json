{
  "library": "@walmart/wmreact-pov-frame",
  "description": "A Single frame for different kind of POVs (Single Story and MultiStory)",
  "title": "POVFrame",
  "components": [
    {
      "displayName": "POVFrame.ThemeButton",
      "methods": [],
      "props": {
        "buttonAlignment": {
          "type": {
            "name": "enum",
            "value": [
              {
                "value": "\"left\"",
                "computed": false
              },
              {
                "value": "\"center\"",
                "computed": false
              },
              {
                "value": "\"right\"",
                "computed": false
              }
            ]
          },
          "required": false,
          "defaultValue": {
            "value": "\"\"",
            "computed": false
          },
          "description": "Button Alignment wrt POV Container. (left, center, right)"
        },
        "linkText": {
          "type": {
            "name": "string"
          },
          "required": true,
          "description": "Text to show on Button."
        },
        "clickThrough": {
          "type": {
            "name": "shape",
            "value": {
              "type": {
                "name": "string",
                "required": true
              },
              "value": {
                "name": "string",
                "required": true
              }
            }
          },
          "required": false,
          "description": "Target url link."
        },
        "buttonTextColor": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"\"",
            "computed": false
          },
          "description": "Button Text color."
        },
        "themeButtonColor": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"\"",
            "computed": false
          },
          "description": "Button background color."
        },
        "uid": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "identifier used in analytics."
        },
        "assetId": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "identifier used in analytics."
        }
      },
      "fileName": "./src/components/theme-button.jsx",
      "description": "Themable button for POVs.",
      "param": "React props for the component",
      "returns": "Image link component",
      "hasProps": true
    },
    {
      "description": "",
      "methods": [
        {
          "name": "_refreshImageMaps",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": null
        },
        {
          "name": "_renderImage",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": null
        },
        {
          "name": "_renderImageMaps",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": null
        }
      ],
      "props": {
        "alt": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "Alt text for image."
        },
        "assetId": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "identifier used in analytics."
        },
        "clickThrough": {
          "type": {
            "name": "shape",
            "value": {
              "type": {
                "name": "string",
                "required": true
              },
              "value": {
                "name": "union",
                "value": [
                  {
                    "name": "string"
                  },
                  {
                    "name": "array"
                  }
                ],
                "required": false
              }
            }
          },
          "required": false,
          "description": "An object with target url information in form of simple link or image maps."
        },
        "contentType": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "Content Type of image file. To be used in module preview."
        },
        "height": {
          "type": {
            "name": "string"
          },
          "required": true,
          "description": "Image height."
        },
        "size": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "Size of image file in bytes. To be used in module preview."
        },
        "src": {
          "type": {
            "name": "string"
          },
          "required": true,
          "description": "Image source."
        },
        "title": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "Image title."
        },
        "uid": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "identifier used in analytics."
        },
        "width": {
          "type": {
            "name": "string"
          },
          "required": true,
          "description": "Image width."
        },
        "url": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"\"",
            "computed": false
          },
          "description": "Target url for rest of the image in case of image maps."
        },
        "lazy": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": "lazy load image"
        },
        "isMobile": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": "is mobile or desktop?"
        }
      },
      "fileName": "./src/components/pov-image-maps.jsx",
      "hasProps": true
    },
    {
      "displayName": "POVFrame",
      "methods": [],
      "props": {
        "themeButton": {
          "type": {
            "name": "object"
          },
          "required": false,
          "defaultValue": {
            "value": "null",
            "computed": false
          },
          "description": ""
        },
        "overlays": {
          "type": {
            "name": "array"
          },
          "required": false,
          "defaultValue": {
            "value": "[]",
            "computed": false
          },
          "description": ""
        },
        "image": {
          "type": {
            "name": "object"
          },
          "required": true,
          "description": ""
        },
        "lazy": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": ""
        },
        "isMobile": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": ""
        }
      },
      "fileName": "./src/components/pov-frame.jsx",
      "description": "A Single frame in SingleStory and MultiStory POV modules.",
      "param": "React props for the component",
      "returns": "Image link component",
      "examples": "Basic POV Frame\n```jsx\n<POVFrame\n  image={{\n    \"alt\": \"pov1\",\n    \"assetId\": \"3ed12cc0-ffef-11e4-a7e0-4925ffc4aa1b\",\n    \"assetName\": \"pov-beauty.png\",\n    \"clickThrough\": {\n      \"type\":\"url\",\n      \"value\":\"http://www.walmart.com/browse/home/beds/4044_103150_102547_91837\"\n    },\n    \"height\": \"388\",\n    \"src\":\"http://i5.walmartimages.com/dfwrs/4ff4222f-cadc/k2-_288b2829-b678-4014-9b77-3b9ac61d25c6.v1.png\",\n    \"title\":\"pov1\",\n    \"width\":\"1364\",\n    \"size\":217814,\n    \"contentType\":\"image/png\",\n    \"uid\":\"pxNz71rX\"\n  }}\n/>\n```\n\nPOV Frame with theme button\n\n```jsx\n<POVFrame\n  image={{\n    \"alt\": \"pov1\",\n    \"assetId\": \"3ed12cc0-ffef-11e4-a7e0-4925ffc4aa1b\",\n    \"assetName\": \"pov-beauty.png\",\n    \"clickThrough\": {\n      \"type\":\"url\",\n      \"value\":\"http://www.walmart.com/browse/home/beds/4044_103150_102547_91837\"\n    },\n    \"height\": \"388\",\n    \"src\":\"http://i5.walmartimages.com/dfwrs/4ff4222f-cadc/k2-_288b2829-b678-4014-9b77-3b9ac61d25c6.v1.png\",\n    \"title\":\"pov1\",\n    \"width\":\"1364\",\n    \"size\":217814,\n    \"contentType\":\"image/png\",\n    \"uid\":\"pxNz71rX\"\n  }}\n  themeButton= {{\n    buttonAlignment: \"right\",\n    themeButtonColor: \"#8b67a5\",\n    buttonTextColor: \"#fff\",\n    linkText: \"Shop Pantene Pro-V\",\n    title: \"Shop Pantene Pro-V\",\n    clickThrough: {\n      type: \"url\",\n      value: \"http://www-e16.walmart.com/cp/103150\"\n    },\n    uid: \"ca6b4pJ9\",\n    assetId: \"dadas13112\"\n  }}\n/>\n```\n\nPOVFrame with Overlay buttons\n```jsx\n<POVFrame\n  image={{\n    \"alt\": \"pov1\",\n    \"assetId\": \"3ed12cc0-ffef-11e4-a7e0-4925ffc4aa1b\",\n    \"assetName\": \"pov-beauty.png\",\n    \"clickThrough\": {\n      \"type\":\"url\",\n      \"value\":\"http://www.walmart.com/browse/home/beds/4044_103150_102547_91837\"\n    },\n    \"height\": \"388\",\n    \"src\":\"http://i5.walmartimages.com/dfwrs/4ff4222f-cadc/k2-_288b2829-b678-4014-9b77-3b9ac61d25c6.v1.png\",\n    \"title\":\"pov1\",\n    \"width\":\"1364\",\n    \"size\":217814,\n    \"contentType\":\"image/png\",\n    \"uid\":\"pxNz71rX\"\n  }}\n  overlays= {[\n    {\n      \"location\":\"A1\",\n      \"currentPrice\":\"73.49\",\n      \"listPrice\": \"85.12\",\n      \"defaultColor\":\"#FFFFFF\",\n      \"hexCode\":\"#543736\",\n      \"priceDisplay\":\"Rollback\",\n      \"bubbleText\": \"Test Message\",\n      \"uid\":\"J-zT8l7U\"\n    }\n   ]}\n/>\n```",
      "import": "{POVFrame}",
      "component": "POVFrame",
      "playground": [
        {
          "title": "POV Frame",
          "flags": {},
          "code": "<POVFrame\n  image={{\n    \"alt\": \"pov1\",\n    \"assetId\": \"3ed12cc0-ffef-11e4-a7e0-4925ffc4aa1b\",\n    \"assetName\": \"pov-beauty.png\",\n    \"clickThrough\": {\n      \"type\":\"url\",\n      \"value\":\"http://www.walmart.com/browse/home/beds/4044_103150_102547_91837\"\n    },\n    \"height\": \"388\",\n    \"src\":\"http://i5.walmartimages.com/dfwrs/4ff4222f-cadc/k2-_288b2829-b678-4014-9b77-3b9ac61d25c6.v1.png\",\n    \"title\":\"pov1\",\n    \"width\":\"1364\",\n    \"size\":217814,\n    \"contentType\":\"image/png\",\n    \"uid\":\"pxNz71rX\"\n  }}\n  themeButton= {{\n    buttonAlignment: \"right\",\n    themeButtonColor: \"#8b67a5\",\n    buttonTextColor: \"#fff\",\n    linkText: \"Shop Pantene Pro-V\",\n    title: \"Shop Pantene Pro-V\",\n    clickThrough: {\n      type: \"url\",\n      value: \"http://www-e16.walmart.com/cp/103150\"\n    },\n    uid: \"ca6b4pJ9\",\n    assetId: \"dadas13112\"\n  }}\n  overlays= {[\n    {\n      \"location\":\"A1\",\n      \"currentPrice\":\"73.49\",\n      \"listPrice\": \"85.12\",\n      \"defaultColor\":\"#FFFFFF\",\n      \"hexCode\":\"#543736\",\n      \"priceDisplay\":\"Rollback\",\n      \"bubbleText\": \"Test Message\",\n      \"uid\":\"J-zT8l7U\"\n    }\n   ]}\n/>\n"
        }
      ],
      "hasProps": true
    },
    {
      "displayName": "POVFrame.Image",
      "methods": [],
      "props": {
        "alt": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "Alt text for image."
        },
        "assetId": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "identifier used in analytics."
        },
        "clickThrough": {
          "type": {
            "name": "object"
          },
          "required": true,
          "description": "An object with target url information in form of simple link or image maps."
        },
        "contentType": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "Content Type of image file. To be used in module preview."
        },
        "height": {
          "type": {
            "name": "string"
          },
          "required": true,
          "description": "Image height."
        },
        "size": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "Size of image file in bytes. To be used in module preview."
        },
        "src": {
          "type": {
            "name": "string"
          },
          "required": true,
          "description": "Image source."
        },
        "title": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "Image title."
        },
        "uid": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "identifier used in analytics."
        },
        "width": {
          "type": {
            "name": "string"
          },
          "required": true,
          "description": "Image width."
        },
        "lazy": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": "lazy load image"
        },
        "isMobile": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": "is mobile or desktop?"
        }
      },
      "fileName": "./src/components/pov-image.jsx",
      "description": "An image link component which wraps a image inside a link.\nCurrent use-case is to use inside POVSlide frame.",
      "param": "React props for the component",
      "returns": "Image link component",
      "examples": "ImageLink\n```jsx\n<ImageLink\n  url=\"http://www.walmart.com\",\n  image= {{\n    src: \"http://i5.walmartimages.com/dfwrs/4ff4222f-c72c/k2-_3d50319d-d056-44d6-9f03-465511812f77.v1.jpg\",\n    alt: \"Chrome cast audio\",\n    width: 1364,\n    height: 300\n  }}\n/>\n```",
      "import": "{POVFrame.Image}",
      "component": "POVFrame.Image",
      "playground": [
        {
          "title": "POVFrame.Image",
          "flags": {},
          "code": "<POVFrame.Image\n  url=\"http://www.walmart.com\",\n  image= {{\n    src: \"http://i5.walmartimages.com/dfwrs/4ff4222f-c72c/k2-_3d50319d-d056-44d6-9f03-465511812f77.v1.jpg\",\n    alt: \"Chrome cast audio\",\n    width: 1364,\n    height: 300\n  }}\n  />\n"
        }
      ],
      "hasProps": true
    },
    {
      "displayName": "POVFrame.DynamicPriceBubble",
      "methods": [
        {
          "name": "_splitLocation",
          "docblock": "Split out the location into x/y co-ordinate as per the specs.\n  @param {string} location  location of overlay button like \"A10\"\n  @returns {object} corresponding x and y co-ordinates.",
          "modifiers": [],
          "params": [
            {
              "name": "location",
              "description": "location of overlay button like \"A10\"",
              "type": {
                "name": "string"
              }
            }
          ],
          "returns": {
            "description": "corresponding x and y co-ordinates.",
            "type": {
              "name": "object"
            }
          },
          "description": "Split out the location into x/y co-ordinate as per the specs."
        },
        {
          "name": "_isRollback",
          "docblock": "Check for rollback. Used for custom styling in case of rollback.\n  @param {string} priceDisplay texts for mobile\n  @returns {boolean} whether it is rollback or not.",
          "modifiers": [],
          "params": [
            {
              "name": "priceDisplay",
              "description": "texts for mobile",
              "type": {
                "name": "string"
              }
            }
          ],
          "returns": {
            "description": "whether it is rollback or not.",
            "type": {
              "name": "boolean"
            }
          },
          "description": "Check for rollback. Used for custom styling in case of rollback."
        },
        {
          "name": "_getBubbleClasses",
          "docblock": "generates css classes for bubble container based on different params.\n  @param {string} locationX  x co-ordinate of button.\n  @param {string} locationY  y co-ordinate of button.\n  @param {string} priceDisplay mobile text\n  @returns {string} generated css classes",
          "modifiers": [],
          "params": [
            {
              "name": "locationX",
              "description": "x co-ordinate of button.",
              "type": {
                "name": "string"
              }
            },
            {
              "name": "locationY",
              "description": "y co-ordinate of button.",
              "type": {
                "name": "string"
              }
            },
            {
              "name": "priceDisplay",
              "description": "mobile text",
              "type": {
                "name": "string"
              }
            }
          ],
          "returns": {
            "description": "generated css classes",
            "type": {
              "name": "string"
            }
          },
          "description": "generates css classes for bubble container based on different params."
        },
        {
          "name": "_renderDesktopText",
          "docblock": "generates the jsx for desktop text\n  @param {string} bubbleText messaging text for desktop.\n  @returns {ReactElement} generated jsx",
          "modifiers": [],
          "params": [
            {
              "name": "bubbleText",
              "description": "messaging text for desktop.",
              "type": {
                "name": "string"
              }
            }
          ],
          "returns": {
            "description": "generated jsx",
            "type": {
              "name": "ReactElement"
            }
          },
          "description": "generates the jsx for desktop text"
        },
        {
          "name": "_renderWasPrice",
          "docblock": "Renders was price.\n  @param {string} listPrice price to display in was price.\n  @returns {ReactElement} generated was price jsx.",
          "modifiers": [],
          "params": [
            {
              "name": "listPrice",
              "description": "price to display in was price.",
              "type": {
                "name": "string"
              }
            }
          ],
          "returns": {
            "description": "generated was price jsx.",
            "type": {
              "name": "ReactElement"
            }
          },
          "description": "Renders was price."
        },
        {
          "name": "_areValidProps",
          "docblock": "Check for props validity\n  @param {string} locationX x co-ordinate of bubble.\n  @param {string} locationY y co-ordinate of bubble.\n  @param {string} currentPrice price to display on bubble.\n  @returns {boolean} if props are valid.",
          "modifiers": [],
          "params": [
            {
              "name": "locationX",
              "description": "x co-ordinate of bubble.",
              "type": {
                "name": "string"
              }
            },
            {
              "name": "locationY",
              "description": "y co-ordinate of bubble.",
              "type": {
                "name": "string"
              }
            },
            {
              "name": "currentPrice",
              "description": "price to display on bubble.",
              "type": {
                "name": "string"
              }
            }
          ],
          "returns": {
            "description": "if props are valid.",
            "type": {
              "name": "boolean"
            }
          },
          "description": "Check for props validity"
        },
        {
          "name": "_getBubbleTextClasses",
          "docblock": "generates css classes for bubble text messaging.\n  @param {string} priceDisplay mobile text\n  @param {string} bubbleText desktop text\n  @returns {string} generated css classes",
          "modifiers": [],
          "params": [
            {
              "name": "priceDisplay",
              "description": "mobile text",
              "type": {
                "name": "string"
              }
            },
            {
              "name": "bubbleText",
              "description": "desktop text",
              "type": {
                "name": "string"
              }
            }
          ],
          "returns": {
            "description": "generated css classes",
            "type": {
              "name": "string"
            }
          },
          "description": "generates css classes for bubble text messaging."
        }
      ],
      "props": {
        "location": {
          "type": {
            "name": "string"
          },
          "required": true,
          "description": "Location string for positioning the button in grid."
        },
        "currentPrice": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "Price to display. It can be from IRO response or manualPrice set in tempo."
        },
        "listPrice": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"\"",
            "computed": false
          },
          "description": "To Show was price incase of Rollback."
        },
        "priceDisplay": {
          "type": {
            "name": "enum",
            "value": [
              {
                "value": "\"from\"",
                "computed": false
              },
              {
                "value": "\"just\"",
                "computed": false
              },
              {
                "value": "\"Rollback\"",
                "computed": false
              }
            ]
          },
          "required": false,
          "description": "Text to display inside bubble for mobile breakpoint."
        },
        "bubbleText": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"\"",
            "computed": false
          },
          "description": "Text to display inside bubble for desktop breakpoint."
        },
        "defaultColor": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"\"",
            "computed": false
          },
          "description": "Text color for messages."
        },
        "hexCode": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"\"",
            "computed": false
          },
          "description": "Background color of buttons."
        },
        "uid": {
          "type": {
            "name": "string"
          },
          "required": true,
          "description": "unique id to be used in analytics."
        }
      },
      "fileName": "./src/components/dynamic-price-bubble.jsx",
      "description": "Button overlays on POVs",
      "hasProps": true
    }
  ]
}