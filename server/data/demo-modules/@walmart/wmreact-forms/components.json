{
  "library": "@walmart/wmreact-forms",
  "description": "Input components including fields and checkboxes",
  "title": "Forms",
  "components": [
    {
      "displayName": "Alert",
      "methods": [
        {
          "name": "_getClasses",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": {
            "type": {
              "name": "string"
            }
          }
        }
      ],
      "props": {
        "message": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"\"",
            "computed": false
          },
          "description": "The message"
        },
        "alertType": {
          "type": {
            "name": "enum",
            "value": [
              {
                "value": "\"error\"",
                "computed": false
              },
              {
                "value": "\"warning\"",
                "computed": false
              },
              {
                "value": "\"success\"",
                "computed": false
              }
            ]
          },
          "required": false,
          "defaultValue": {
            "value": "\"error\"",
            "computed": false
          },
          "description": "The type of alert. Either error, warning or success."
        },
        "isBlock": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": "True if it lays out block style."
        },
        "isAboveForm": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": "True if it it's located above a form."
        }
      },
      "fileName": "./src/components/alert.jsx",
      "description": "Alert component.",
      "examples": "```jsx\n<Alert message=\"Error\" type=\"error\" isBlock={true}/>\n```",
      "component": "Alert",
      "import": "{Alert}",
      "playground": [
        {
          "title": "Alert",
          "flags": {},
          "code": "<Alert message=\"Error\" type=\"error\" isBlock={true}/>\n"
        }
      ],
      "hasProps": true
    },
    {
      "displayName": "CreditCardNumberField",
      "methods": [],
      "props": {
        "automationId": {
          "defaultValue": {
            "value": "\"credit-card-number\"",
            "computed": false
          }
        },
        "labelText": {
          "type": {
            "name": "node"
          },
          "required": false,
          "defaultValue": {
            "value": "\"\"",
            "computed": false
          },
          "description": "The field label"
        },
        "instructionText": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"\"",
            "computed": false
          },
          "description": "The instruction text"
        },
        "isDisabled": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": "True if the field is disabled"
        },
        "showLabel": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "true",
            "computed": false
          },
          "description": "True if we should show the label"
        },
        "hidden": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": ""
        },
        "tealeafId": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"field\"",
            "computed": false
          },
          "description": "The optional TeaLeaf ID"
        }
      },
      "fileName": "./src/components/credit-card-number.jsx",
      "description": "Credit card number field.",
      "examples": "```jsx\n<CreditCardNumber />\n```",
      "component": "CreditCardNumber",
      "import": "{CreditCardNumber}",
      "wraps": "Field",
      "mixin": null,
      "playground": [
        {
          "title": "CreditCardNumber",
          "flags": {},
          "code": "<CreditCardNumber />\n"
        }
      ],
      "hasProps": true
    },
    {
      "displayName": "DOB",
      "methods": [],
      "props": {
        "labelText": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"Date of birth\"",
            "computed": false
          },
          "description": ""
        },
        "placeholderText": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"mm/dd/yyyy\"",
            "computed": false
          },
          "description": ""
        },
        "automationId": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"date-of-birth\"",
            "computed": false
          },
          "description": ""
        },
        "instructionText": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"\"",
            "computed": false
          },
          "description": "The instruction text"
        },
        "isDisabled": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": "True if the field is disabled"
        },
        "showLabel": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "true",
            "computed": false
          },
          "description": "True if we should show the label"
        },
        "hidden": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": ""
        },
        "tealeafId": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"field\"",
            "computed": false
          },
          "description": "The optional TeaLeaf ID"
        }
      },
      "fileName": "./src/components/dob.jsx",
      "description": "Date of birth field.",
      "examples": "```jsx\n<DOB />\n```",
      "component": "DOB",
      "import": "{DOB}",
      "wraps": "Field",
      "mixin": null,
      "playground": [
        {
          "title": "DOB",
          "flags": {},
          "code": "<DOB />\n"
        }
      ],
      "hasProps": true
    },
    {
      "displayName": "emailField",
      "methods": [],
      "props": {
        "automationId": {
          "defaultValue": {
            "value": "\"email-address\"",
            "computed": false
          }
        },
        "labelText": {
          "type": {
            "name": "node"
          },
          "required": false,
          "defaultValue": {
            "value": "\"\"",
            "computed": false
          },
          "description": "The field label"
        },
        "instructionText": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"\"",
            "computed": false
          },
          "description": "The instruction text"
        },
        "isDisabled": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": "True if the field is disabled"
        },
        "showLabel": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "true",
            "computed": false
          },
          "description": "True if we should show the label"
        },
        "hidden": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": ""
        },
        "tealeafId": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"field\"",
            "computed": false
          },
          "description": "The optional TeaLeaf ID"
        }
      },
      "fileName": "./src/components/email.jsx",
      "description": "Email field.",
      "examples": "```jsx\n<Email />\n```",
      "component": "Email",
      "import": "{Email}",
      "wraps": "Field",
      "mixin": null,
      "playground": [
        {
          "title": "Email",
          "flags": {},
          "code": "<Email />\n"
        }
      ],
      "hasProps": true
    },
    {
      "displayName": "FormField",
      "methods": [
        {
          "name": "_getDefaultText",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": {
            "type": {
              "name": "union",
              "raw": "ReactElement | string",
              "elements": [
                {
                  "name": "ReactElement"
                },
                {
                  "name": "string"
                }
              ]
            }
          }
        },
        {
          "name": "_getLabelText",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": {
            "type": {
              "name": "union",
              "raw": "ReactElement | string",
              "elements": [
                {
                  "name": "ReactElement"
                },
                {
                  "name": "string"
                }
              ]
            }
          }
        }
      ],
      "props": {
        "labelText": {
          "type": {
            "name": "node"
          },
          "required": false,
          "defaultValue": {
            "value": "\"\"",
            "computed": false
          },
          "description": "The field label"
        },
        "instructionText": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"\"",
            "computed": false
          },
          "description": "The instruction text"
        },
        "isDisabled": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": "True if the field is disabled"
        },
        "showLabel": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "true",
            "computed": false
          },
          "description": "True if we should show the label"
        },
        "automationId": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"field\"",
            "computed": false
          },
          "description": "The optional automation ID"
        },
        "hidden": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": ""
        },
        "tealeafId": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"field\"",
            "computed": false
          },
          "description": "The optional TeaLeaf ID"
        }
      },
      "fileName": "./src/components/field.jsx",
      "description": "A generic field.",
      "component": "Field",
      "import": "{Field}",
      "hasProps": true
    },
    {
      "displayName": "firstNameField",
      "methods": [],
      "props": {
        "automationId": {
          "defaultValue": {
            "value": "\"first-name\"",
            "computed": false
          }
        },
        "labelText": {
          "type": {
            "name": "node"
          },
          "required": false,
          "defaultValue": {
            "value": "\"\"",
            "computed": false
          },
          "description": "The field label"
        },
        "instructionText": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"\"",
            "computed": false
          },
          "description": "The instruction text"
        },
        "isDisabled": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": "True if the field is disabled"
        },
        "showLabel": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "true",
            "computed": false
          },
          "description": "True if we should show the label"
        },
        "hidden": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": ""
        },
        "tealeafId": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"field\"",
            "computed": false
          },
          "description": "The optional TeaLeaf ID"
        }
      },
      "fileName": "./src/components/firstname.jsx",
      "description": "First name field.",
      "examples": "```jsx\n<FirstName />\n```",
      "component": "FirstName",
      "import": "{FirstName}",
      "wraps": "Field",
      "mixin": null,
      "playground": [
        {
          "title": "FirstName",
          "flags": {},
          "code": "<FirstName />\n"
        }
      ],
      "hasProps": true
    },
    {
      "displayName": "FullName",
      "methods": [],
      "props": {
        "automationId": {
          "defaultValue": {
            "value": "\"full-name\"",
            "computed": false
          }
        },
        "labelText": {
          "type": {
            "name": "node"
          },
          "required": false,
          "defaultValue": {
            "value": "\"\"",
            "computed": false
          },
          "description": "The field label"
        },
        "instructionText": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"\"",
            "computed": false
          },
          "description": "The instruction text"
        },
        "isDisabled": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": "True if the field is disabled"
        },
        "showLabel": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "true",
            "computed": false
          },
          "description": "True if we should show the label"
        },
        "hidden": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": ""
        },
        "tealeafId": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"field\"",
            "computed": false
          },
          "description": "The optional TeaLeaf ID"
        }
      },
      "fileName": "./src/components/fullname.jsx",
      "description": "Full name field.",
      "examples": "```jsx\n<FullName />\n```",
      "component": "FullName",
      "import": "{FullName}",
      "wraps": "Field",
      "mixin": null,
      "playground": [
        {
          "title": "FullName",
          "flags": {},
          "code": "<FullName />\n"
        }
      ],
      "hasProps": true
    },
    {
      "displayName": "lastNameField",
      "methods": [],
      "props": {
        "automationId": {
          "defaultValue": {
            "value": "\"last-name\"",
            "computed": false
          }
        },
        "labelText": {
          "type": {
            "name": "node"
          },
          "required": false,
          "defaultValue": {
            "value": "\"\"",
            "computed": false
          },
          "description": "The field label"
        },
        "instructionText": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"\"",
            "computed": false
          },
          "description": "The instruction text"
        },
        "isDisabled": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": "True if the field is disabled"
        },
        "showLabel": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "true",
            "computed": false
          },
          "description": "True if we should show the label"
        },
        "hidden": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": ""
        },
        "tealeafId": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"field\"",
            "computed": false
          },
          "description": "The optional TeaLeaf ID"
        }
      },
      "fileName": "./src/components/lastname.jsx",
      "description": "Full name field.",
      "examples": "```jsx\n<LastName />\n```",
      "component": "LastName",
      "import": "{LastName}",
      "wraps": "Field",
      "mixin": null,
      "playground": [
        {
          "title": "LastName",
          "flags": {},
          "code": "<LastName />\n"
        }
      ],
      "hasProps": true
    },
    {
      "displayName": "Error",
      "methods": [],
      "props": {
        "block": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": "True if this should be presented in block"
        },
        "aboveForm": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": "True if it's located above a form"
        },
        "automationId": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"error-message\"",
            "computed": false
          },
          "description": "The optional automation ID"
        },
        "hidden": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": ""
        }
      },
      "fileName": "./src/components/message-error.jsx",
      "description": "Error message component",
      "examples": "```jsx\n<Message.Error block={true}>\n  Error message\n</Message.Error>\n```",
      "component": "Message.Error",
      "import": "{Message}",
      "playground": [
        {
          "title": "Message.Error",
          "flags": {},
          "code": "<Message.Error block={true}>\n  Error message\n</Message.Error>\n"
        }
      ],
      "hasProps": true
    },
    {
      "displayName": "Success",
      "methods": [],
      "props": {
        "block": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": "True if this should be presented in block"
        },
        "aboveForm": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": "True if it's located above a form"
        },
        "automationId": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"success-message\"",
            "computed": false
          },
          "description": "The optional automation ID"
        },
        "hidden": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": ""
        }
      },
      "fileName": "./src/components/message-success.jsx",
      "description": "Success message component",
      "examples": "```jsx\n<Message.Success block={true}>\n  Success message\n</Message.Success>\n```",
      "component": "Message.Success",
      "import": "{Message}",
      "playground": [
        {
          "title": "Message.Success",
          "flags": {},
          "code": "<Message.Success block={true}>\n  Success message\n</Message.Success>\n"
        }
      ],
      "hasProps": true
    },
    {
      "displayName": "Warning",
      "methods": [],
      "props": {
        "block": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": "True if this should be presented in block"
        },
        "aboveForm": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": "True if it's located above a form"
        },
        "automationId": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"warning-message\"",
            "computed": false
          },
          "description": "The optional automation ID"
        },
        "hidden": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": ""
        }
      },
      "fileName": "./src/components/message-warning.jsx",
      "description": "Warning message component",
      "examples": "```jsx\n<Message.Warning block={true}>\n  Warning message\n</Message.Warning>\n```",
      "component": "Message.Warning",
      "import": "{Message}",
      "playground": [
        {
          "title": "Message.Warning",
          "flags": {},
          "code": "<Message.Warning block={true}>\n  Warning message\n</Message.Warning>\n"
        }
      ],
      "hasProps": true
    },
    {
      "displayName": "Option",
      "methods": [
        {
          "name": "_handleChange",
          "docblock": null,
          "modifiers": [],
          "params": [
            {
              "name": "ev",
              "type": {
                "name": "Object"
              }
            }
          ],
          "returns": {
            "type": {
              "name": "void"
            }
          }
        }
      ],
      "props": {
        "idName": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"\"",
            "computed": false
          },
          "description": ""
        },
        "onCheckedChange": {
          "type": {
            "name": "func"
          },
          "required": false,
          "description": "Called when the check state changes"
        },
        "checkboxName": {
          "type": {
            "name": "string"
          },
          "required": true,
          "description": "The name of the checkbox"
        },
        "disabled": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": "True if disabled"
        },
        "defaultChecked": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": "True if the input defaults to checked."
        },
        "automationId": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"option\"",
            "computed": false
          },
          "description": "The optional automation ID."
        },
        "hidden": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": ""
        },
        "tealeafId": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"option\"",
            "computed": false
          },
          "description": "The optional TeaLeaf ID."
        }
      },
      "fileName": "./src/components/option.jsx",
      "description": "A checkbox (or option).",
      "examples": "```jsx\n<Option\n  checkboxName=\"demo\">\n  Click me\n</Option>\n```",
      "component": "Option",
      "import": "{Option}",
      "synonym": [
        "checkbox"
      ],
      "playground": [
        {
          "title": "Option",
          "flags": {},
          "code": "<Option\n  checkboxName=\"demo\">\n  Click me\n</Option>\n"
        }
      ],
      "hasProps": true
    },
    {
      "displayName": "Options",
      "methods": [
        {
          "name": "_onCheckboxChange",
          "docblock": null,
          "modifiers": [],
          "params": [
            {
              "name": "idx",
              "type": {
                "name": "number"
              }
            },
            {
              "name": "isChecked",
              "type": {
                "name": "literal",
                "value": "true"
              }
            }
          ],
          "returns": {
            "type": {
              "name": "void"
            }
          }
        },
        {
          "name": "getCheckedOptions",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": {
            "type": {
              "name": "Array",
              "elements": [
                {
                  "name": "any"
                }
              ],
              "raw": "Array<any>"
            }
          }
        }
      ],
      "props": {
        "choices": {
          "type": {
            "name": "arrayOf",
            "value": {
              "name": "shape",
              "value": {
                "label": {
                  "name": "string",
                  "required": false
                },
                "checked": {
                  "name": "bool",
                  "required": false
                }
              }
            }
          },
          "required": false,
          "description": "The choices. Which is an array of `label` and `checked`"
        },
        "onChange": {
          "type": {
            "name": "func"
          },
          "required": false,
          "description": "Called when the radio selection changes"
        },
        "automationId": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"options\"",
            "computed": false
          },
          "description": "The optional automation ID"
        },
        "tealeafId": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"options\"",
            "computed": false
          },
          "description": "The optional TeaLeaf ID"
        },
        "idName": {
          "defaultValue": {
            "value": "\"\"",
            "computed": false
          }
        }
      },
      "fileName": "./src/components/options.jsx",
      "description": "A simplified component that makes building a set of components easy.",
      "examples": "```jsx\n<Options\n  choices={[{\n    label: \"one\",\n    checked: true\n  }, {\n    label: \"two\",\n    checked: false\n  }, {\n    label: \"three\",\n    checked: false\n  }, {\n    label: \"four\",\n    checked: false\n  }]}\n  onChange={(checkedOptions, index) => {\n    let checked = checkedOptions\n      .filter((choice) => choice.checked)\n      .map((choice) => choice.label);\n\n    console.log(checked); // Check your console\n    console.log('index changed:', index);\n  }} />\n```",
      "component": "Options",
      "import": "{Options}",
      "synonym": [
        "checkbox"
      ],
      "playground": [
        {
          "title": "Options",
          "flags": {},
          "code": "<Options\n  choices={[{\n    label: \"one\",\n    checked: true\n  }, {\n    label: \"two\",\n    checked: false\n  }, {\n    label: \"three\",\n    checked: false\n  }, {\n    label: \"four\",\n    checked: false\n  }]}\n  onChange={(checkedOptions, index) => {\n    let checked = checkedOptions\n      .filter((choice) => choice.checked)\n      .map((choice) => choice.label);\n\n    console.log(checked); // Check your console\n    console.log('index changed:', index);\n  }} />\n"
        }
      ],
      "hasProps": true
    },
    {
      "displayName": "passwordExistingField",
      "methods": [],
      "props": {
        "automationId": {
          "defaultValue": {
            "value": "\"password-existing\"",
            "computed": false
          }
        },
        "labelText": {
          "type": {
            "name": "node"
          },
          "required": false,
          "defaultValue": {
            "value": "\"\"",
            "computed": false
          },
          "description": "The field label"
        },
        "instructionText": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"\"",
            "computed": false
          },
          "description": "The instruction text"
        },
        "isDisabled": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": "True if the field is disabled"
        },
        "showLabel": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "true",
            "computed": false
          },
          "description": "True if we should show the label"
        },
        "hidden": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": ""
        },
        "tealeafId": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"field\"",
            "computed": false
          },
          "description": "The optional TeaLeaf ID"
        }
      },
      "fileName": "./src/components/password-existing.jsx",
      "description": "Existing Password field.",
      "examples": "```jsx\n<PasswordExisting />\n```",
      "component": "PasswordExisting",
      "import": "{PasswordExisting}",
      "wraps": "Field",
      "mixin": null,
      "playground": [
        {
          "title": "PasswordExisting",
          "flags": {},
          "code": "<PasswordExisting />\n"
        }
      ],
      "hasProps": true
    },
    {
      "displayName": "passwordWithConfirmField",
      "methods": [
        {
          "name": "_checkIfCurrentPasswordMatchesOther",
          "docblock": null,
          "modifiers": [],
          "params": [
            {
              "name": "passwordRefCurrent",
              "type": {
                "name": "signature",
                "type": "object",
                "raw": "{\n  validate: Function\n}",
                "signature": {
                  "properties": [
                    {
                      "key": "validate",
                      "value": {
                        "name": "Function",
                        "required": true
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "passwordRefOther",
              "type": {
                "name": "signature",
                "type": "object",
                "raw": "{getValue: Function}",
                "signature": {
                  "properties": [
                    {
                      "key": "getValue",
                      "value": {
                        "name": "Function",
                        "required": true
                      }
                    }
                  ]
                }
              }
            }
          ],
          "returns": {
            "type": {
              "name": "void"
            }
          }
        },
        {
          "name": "_onChange1",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": {
            "type": {
              "name": "void"
            }
          }
        },
        {
          "name": "_onChange2",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": {
            "type": {
              "name": "void"
            }
          }
        }
      ],
      "props": {
        "cols": {
          "type": {
            "name": "number"
          },
          "required": false,
          "defaultValue": {
            "value": "2",
            "computed": false
          },
          "description": "The number of columns"
        },
        "useConfirmLabel": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "true",
            "computed": false
          },
          "description": "True if we should use the confirm label"
        },
        "usePasswordLabel": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "true",
            "computed": false
          },
          "description": "True if we should use the password label"
        },
        "usePasswordPlaceHolder": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": "True if we should use the password place holder"
        },
        "useConfirmPlaceHolder": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": "True if we should use the confirm place holder"
        },
        "onChange": {
          "type": {
            "name": "func"
          },
          "required": false,
          "description": "Called back when the value changes"
        },
        "hidden": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": "True if the component is hidden"
        },
        "automationId": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"password\"",
            "computed": false
          },
          "description": "The optional automation ID"
        },
        "tealeafId": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"password\"",
            "computed": false
          },
          "description": "The optional TeaLeaf ID"
        }
      },
      "fileName": "./src/components/password-with-confirm.jsx",
      "description": "Password with confirm field.",
      "examples": "```jsx\n<PasswordWithConfirmation />\n```",
      "component": "PasswordWithConfirmation",
      "import": "{PasswordWithConfirmation}",
      "mixin": null,
      "playground": [
        {
          "title": "",
          "flags": {},
          "code": "<PasswordWithConfirmation />\n"
        }
      ],
      "hasProps": true
    },
    {
      "displayName": "PhoneNumber",
      "methods": [],
      "props": {
        "automationId": {
          "defaultValue": {
            "value": "\"phone-number\"",
            "computed": false
          }
        },
        "labelText": {
          "type": {
            "name": "node"
          },
          "required": false,
          "defaultValue": {
            "value": "\"\"",
            "computed": false
          },
          "description": "The field label"
        },
        "instructionText": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"\"",
            "computed": false
          },
          "description": "The instruction text"
        },
        "isDisabled": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": "True if the field is disabled"
        },
        "showLabel": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "true",
            "computed": false
          },
          "description": "True if we should show the label"
        },
        "hidden": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": ""
        },
        "tealeafId": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"field\"",
            "computed": false
          },
          "description": "The optional TeaLeaf ID"
        }
      },
      "fileName": "./src/components/phone.jsx",
      "description": "Phone number field.",
      "examples": "```jsx\n<Phone />\n```",
      "component": "Phone",
      "import": "{Phone}",
      "wraps": "Field",
      "mixin": null,
      "playground": [
        {
          "title": "Phone",
          "flags": {},
          "code": "<Phone />\n"
        }
      ],
      "hasProps": true
    },
    {
      "displayName": "Radio",
      "methods": [],
      "props": {
        "alt": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": "True if this is in alt style"
        },
        "id": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"\"",
            "computed": false
          },
          "description": "The id of the control"
        },
        "group": {
          "type": {
            "name": "string"
          },
          "required": true,
          "description": "The group name"
        },
        "onChange": {
          "type": {
            "name": "func"
          },
          "required": false,
          "defaultValue": {
            "value": "function() {}",
            "computed": false
          },
          "description": "The change callback"
        },
        "onClick": {
          "type": {
            "name": "func"
          },
          "required": false,
          "defaultValue": {
            "value": "function() {\n  const isChecked = !this.props.checked;\n  this.setState({\n    checked: isChecked\n  });\n}",
            "computed": false
          },
          "description": "The click handler"
        },
        "checked": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": "True if the input is checked"
        },
        "automationId": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"radio-button\"",
            "computed": false
          },
          "description": "The optional automation ID"
        },
        "hidden": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": ""
        },
        "tealeafId": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"radio-button\"",
            "computed": false
          },
          "description": "The optional TeaLeaf ID"
        }
      },
      "fileName": "./src/components/radio-button.jsx",
      "description": "A radio compnent.",
      "examples": "```jsx\n<Radio.Button group=\"demo\">\n  Radio 1\n</Radio.Button>\n```",
      "component": "Radio.Button",
      "import": "{Radio}",
      "hasProps": true
    },
    {
      "methods": [
        {
          "name": "_onClick",
          "docblock": null,
          "modifiers": [],
          "params": [
            {
              "name": "index",
              "type": {
                "name": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "name": "void"
            }
          }
        },
        {
          "name": "renderRadio",
          "docblock": null,
          "modifiers": [],
          "params": [
            {
              "name": "child",
              "type": {
                "name": "ReactElement"
              }
            },
            {
              "name": "index",
              "type": {
                "name": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "name": "void"
            }
          }
        }
      ],
      "props": {
        "name": {
          "type": {
            "name": "string"
          },
          "required": true,
          "description": ""
        },
        "onChange": {
          "type": {
            "name": "func"
          },
          "required": false,
          "defaultValue": {
            "value": "function(index: number) {}",
            "computed": false
          },
          "description": ""
        },
        "selected": {
          "type": {
            "name": "number"
          },
          "required": false,
          "description": ""
        },
        "automationId": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"radio-group\"",
            "computed": false
          },
          "description": ""
        },
        "hidden": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": ""
        },
        "tealeafId": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"radio-group\"",
            "computed": false
          },
          "description": ""
        }
      },
      "fileName": "./src/components/radio-group.jsx",
      "description": "A radio group compnent.",
      "examples": "```jsx\n<Radio.Group name=\"test\">\n  <Radio.Button group=\"demo\">\n    Radio 1\n  </Radio.Button>\n  <Radio.Button group=\"demo\">\n    Radio 2\n  </Radio.Button>\n</Radio.Group>\n```",
      "component": "Radio.Group",
      "import": "{Radio}",
      "playground": [
        {
          "title": "Radio.Group",
          "flags": {},
          "code": "<Radio.Group name=\"test\">\n  <Radio.Button group=\"demo\">\n    Radio 1\n  </Radio.Button>\n  <Radio.Button group=\"demo\">\n    Radio 2\n  </Radio.Button>\n</Radio.Group>\n"
        }
      ],
      "hasProps": true
    },
    {
      "displayName": "TileGroup",
      "methods": [
        {
          "name": "_renderRadio",
          "docblock": null,
          "modifiers": [],
          "params": [
            {
              "name": "child",
              "type": {
                "name": "ReactElement"
              }
            },
            {
              "name": "index",
              "type": {
                "name": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "name": "ReactElement"
            }
          }
        }
      ],
      "props": {
        "groupName": {
          "type": {
            "name": "string"
          },
          "required": true,
          "description": "The name of the group"
        },
        "automationId": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"radio-tile\"",
            "computed": false
          },
          "description": "An optional automation ID"
        },
        "hidden": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": ""
        },
        "tealeafId": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"radio-tile\"",
            "computed": false
          },
          "description": "An optional TeaLeaf ID"
        }
      },
      "fileName": "./src/components/radio-tile.jsx",
      "description": "A radio tile group component.",
      "examples": "```jsx\n<RadioTile groupName=\"demo\">\n  <RadioTile.tile rounded={true} groupName=\"demo\">\n    Tile 1\n  </RadioTile.tile>\n  <RadioTile.tile rounded={true} groupName=\"demo\">\n    Tile 2\n  </RadioTile.tile>\n</RadioTile>\n```",
      "component": "RadioTile",
      "import": "{RadioTile}",
      "playground": [
        {
          "title": "RadioTile",
          "flags": {},
          "code": "<RadioTile groupName=\"demo\">\n  <RadioTile.tile rounded={true} groupName=\"demo\">\n    Tile 1\n  </RadioTile.tile>\n  <RadioTile.tile rounded={true} groupName=\"demo\">\n    Tile 2\n  </RadioTile.tile>\n</RadioTile>\n"
        }
      ],
      "hasProps": true
    },
    {
      "displayName": "Tile",
      "methods": [],
      "props": {
        "groupName": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "The host group name"
        },
        "column": {
          "type": {
            "name": "number"
          },
          "required": false,
          "defaultValue": {
            "value": "0",
            "computed": false
          },
          "description": "The column number"
        },
        "alignment": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"\"",
            "computed": false
          },
          "description": "The alignment"
        },
        "checked": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": "True if checked"
        },
        "footer": {
          "type": {
            "name": "node"
          },
          "required": false,
          "defaultValue": {
            "value": "null",
            "computed": false
          },
          "description": "An optional footer"
        },
        "aside": {
          "type": {
            "name": "node"
          },
          "required": false,
          "description": "An optional aside"
        },
        "borderless": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": "True if the tile is borderless"
        },
        "flat": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": "True if the tile is flat"
        },
        "rounded": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": "True if the tile is rounded"
        },
        "roundedTop": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": "True if the tile has a rounded top"
        },
        "roundedBottom": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": "True if the tile has a rounded bottom"
        },
        "padded": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": "True if the tile is padded"
        },
        "onChange": {
          "type": {
            "name": "func"
          },
          "required": false,
          "defaultValue": {
            "value": "function(index: ?number) {}",
            "computed": false
          },
          "description": "Called when the component changes"
        },
        "onClick": {
          "type": {
            "name": "func"
          },
          "required": false,
          "defaultValue": {
            "value": "function(index: ?number) {}",
            "computed": false
          },
          "description": "Called when the component is clicked"
        },
        "automationId": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "An optional automation ID"
        },
        "hidden": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": ""
        },
        "tealeafId": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "An optional TeaLeaf ID"
        },
        "selected": {
          "defaultValue": {
            "value": "\"\"",
            "computed": false
          }
        }
      },
      "fileName": "./src/components/radio-tile-tile.jsx",
      "description": "A radio tile component for use within a radio group.",
      "examples": "```jsx\n<RadioTile.tile rounded={true} groupName=\"demo\">\n  Tile 1\n</RadioTile.tile>\n```",
      "component": "RadioTile.tile",
      "import": "{RadioTile}",
      "hasProps": true
    },
    {
      "displayName": "StoreNumberField",
      "methods": [],
      "props": {
        "automationId": {
          "defaultValue": {
            "value": "\"store-number\"",
            "computed": false
          }
        },
        "labelText": {
          "type": {
            "name": "node"
          },
          "required": false,
          "defaultValue": {
            "value": "\"\"",
            "computed": false
          },
          "description": "The field label"
        },
        "instructionText": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"\"",
            "computed": false
          },
          "description": "The instruction text"
        },
        "isDisabled": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": "True if the field is disabled"
        },
        "showLabel": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "true",
            "computed": false
          },
          "description": "True if we should show the label"
        },
        "hidden": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": ""
        },
        "tealeafId": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"field\"",
            "computed": false
          },
          "description": "The optional TeaLeaf ID"
        }
      },
      "fileName": "./src/components/store-number.jsx",
      "description": "Store number field.",
      "examples": "```jsx\n<StoreNumber />\n```",
      "component": "StoreNumber",
      "import": "{StoreNumber}",
      "wraps": "Field",
      "mixin": null,
      "playground": [
        {
          "title": "StoreNumber",
          "flags": {},
          "code": "<StoreNumber />\n"
        }
      ],
      "hasProps": true
    },
    {
      "displayName": "zipCodeField",
      "methods": [],
      "props": {
        "automationId": {
          "defaultValue": {
            "value": "\"zipcode\"",
            "computed": false
          }
        },
        "labelText": {
          "type": {
            "name": "node"
          },
          "required": false,
          "defaultValue": {
            "value": "\"\"",
            "computed": false
          },
          "description": "The field label"
        },
        "instructionText": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"\"",
            "computed": false
          },
          "description": "The instruction text"
        },
        "isDisabled": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": "True if the field is disabled"
        },
        "showLabel": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "true",
            "computed": false
          },
          "description": "True if we should show the label"
        },
        "hidden": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": ""
        },
        "tealeafId": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"field\"",
            "computed": false
          },
          "description": "The optional TeaLeaf ID"
        }
      },
      "fileName": "./src/components/zipcode.jsx",
      "description": "Zipcode field.",
      "examples": "```jsx\n<ZipCode />\n```",
      "component": "ZipCode",
      "import": "{ZipCode}",
      "wraps": "Field",
      "mixin": null,
      "playground": [
        {
          "title": "ZipCode",
          "flags": {},
          "code": "<ZipCode />\n"
        }
      ],
      "hasProps": true
    }
  ]
}