@require "~@walmart/wmreact-base/src/styles/base";

/*!
Flyout
.flyout-top - Positioned above button.
.flyout-right - Positioned to right of button.
.flyout-bottom - Positioned below button.
.flyout-left - Positioned to left of button.
Styleguide 8.4
*/

// Flyout Variables

$flyout-caret-size = 14px;

// Flyout Animations

@keyframes flyout-slide-bottom {
  0% {
    opacity: 0;
    transform: translate3d(-50%, -5px, 0);
  }

  100% {
    opacity: 1;
    transform: translate3d(-50%, 0, 0);
  }
}

@keyframes flyout-slide-top {
  0% {
    opacity: 0;
    transform: translate3d(-50%, 5px, 0);
  }

  100% {
    opacity: 1;
    transform: translate3d(-50%, 0, 0);
  }
}

@keyframes flyout-slide-right {
  0% {
    opacity: 0;
    transform: translate3d(-5px, -50%, 0);
  }

  100% {
    opacity: 1;
    transform: translate3d(0, -50%, 0);
  }
}

@keyframes flyout-slide-left {
  0% {
    opacity: 0;
    transform: translate3d(5px, -50%, 0);
  }

  100% {
    opacity: 1;
    transform: translate3d(0, -50%, 0);
  }
}

// Base Flyout Styles

.flyout {
  position: relative;

  display: inline-block;

  &.hidden {
    visibility: hidden;

    &, .flyout-modal {
      display: block;
    }
  }
}

.flyout-block {
  display: block;
  width: 100%;
}

.flyout.active > {
  .flyout-modal,
  .flyout-backdrop {
    display: block;
  }
}

.flyout-backdrop {
  wmzindex("basic");

  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;

  display: none;
}

.flyout-toggle {
  // Position relative + z-index to sit on top of flyout-backdrop
  wmzindex("basic-increment");

  position: relative;
}

$flyout-caret {
  &:before, &:after {
    wmzindex("flyout");

    content: "";
    position: absolute;

    pointer-events: none;
  }

  &:after {
    width: 0;
    height: 0;
    border: 13px solid transparent;
  }

  &:before {
    wmzindex("flyout-caret-shadow");

    width: 18px;
    height: @width;
    border: 1px solid rgba(0, 0, 0, .1);
    border-width: 1px 1px 0 0;

    box-shadow: 1px -1px 2px rgba(0, 0, 0, .12);
    transform: rotate(-45deg);

    // Adjust shadow slightly to prevent artifacts on hi-dpi screens.
    @media (-o-min-device-pixel-ratio: 5/4),
      (-webkit-min-device-pixel-ratio: 1.25),
      (min-resolution: 120dpi) {
        box-shadow: 2px -2px 2px -1px rgba(0, 0, 0, .1);
    }
  }

  .no-boxshadow & {
    border: 1px solid $grey-light;

    &:before {
      width: 0;
      height: @width;
      border: 15px solid transparent;
    }
  }
}

// Caret that is an element instead of a pseudo-element.
.flyout-caret {
  @extend $flyout-caret;
  position: absolute;
  width: 18px;
  height: 18px;
}

.flyout-modal {
  @extend $flyout-caret;

  wmzindex("flyout");

  position: absolute;

  display: none;

  width: 276px;
  padding: 20px;
  border-radius: 5px;

  background-color: $white;
  background-color: rgba(255, 255, 255, .96);
  box-shadow: 0 0 2px 2px rgba(0, 0, 0, .12);
}

// overrides for tray style
.slide-tray {

  &.flyout-modal {
    wmzindex("modal");
  }
}

$tenant-flyout-modal();

/*!
Flyout Sizes
.flyout-modal-narrow - Narrow flyout modal.
.flyout-modal-wide - Wide flyout modal.
.flyout-modal-extrawide - Extrawide flyout modal.
.flyout-fluid - Fluid flyout.
Styleguide 8.5
*/

.flyout-modal-narrow {
  width: 248px;
}

.flyout-modal-wide {
  width: 308px;
}

.flyout-modal-extrawide {
  width: 388px;
}

.slide-tray {
  &.flyout-modal-narrow, &.flyout-modal-wide, &.flyout-modal-extrawide {
    width: 100%;
    margin: 0;
  }
}

.flyout-modal-full {
  left: 0 !important; // @stylint ignore
  position: relative;

  padding-top: 40px;
  padding-bottom: 40px;
  width: 100%;

  .flyout-close {
    width: 30px;
    height: 30px;

    font-size: 20px;
  }
}

// Flyout Directions (positioning and caret styles)

flyout-axis($axis) {
  if ($axis == x) {
    $pull-direction = top;
    $transform = translateY(-50%);
  }

  if ($axis == y) {
    $pull-direction = left;
    $transform = translateX(-50%);
  }

  .flyout-modal {
    {$pull-direction}: 50%; // @stylint ignore
    transform: $transform;
  }

  .flyout-modal,
  .flyout-align-caret,
  .flyout-caret {
    &:before,
    &:after {
      {$pull-direction}: 0; // @stylint ignore
      {opposite-position($pull-direction)}: 0; // @stylint ignore

      margin: auto;
    }
  }
}

flyout-direction($direction) {
  if ($direction == right) {
    $rotation = -135deg;
  } else if ($direction == left) {
    $rotation = 45deg;
  } else if ($direction == top) {
    $rotation = 135deg;
  } else if ($direction == bottom) {
    $rotation = -45deg;
  }

  $opposite = opposite-position($direction);

  .flyout-modal {
    {$opposite}: 100%; // @stylint ignore

    margin-{$opposite}: 16px; // @stylint ignore
  }

  .flyout-caret {
    {$direction}: 100%; // @stylint ignore
    margin-{$direction}: 8px; // @stylint ignore

    &:after {
      {$opposite}: 0; // @stylint ignore
    }

    &:before {
      {$opposite}: 16px; // @stylint ignore
      {$direction}: 3px; // @stylint ignore
      transform: rotate($rotation);

      .no-boxshadow & {
        margin-{$direction}: 0; // @stylint ignore
        border-{$direction}-color: $grey-light; // @stylint ignore
      }
    }

    &:after {
      border-{$direction}-color: $white; // @stylint ignore
      border-{$direction}-color: rgba(255, 255, 255, .96); // @stylint ignore
    }
  }

  .flyout-modal,
  .flyout-align-caret {
    &:before, &:after {
      {$direction}: 100%; // @stylint ignore
    }

    &:before {
      margin-{$direction}: -9px; // @stylint ignore

      transform: rotate($rotation);

      .no-boxshadow & {
        margin-{$direction}: 0; // @stylint ignore
        border-{$direction}-color: $grey-light; // @stylint ignore
      }
    }

    &:after {
      border-{$direction}-color: $white; // @stylint ignore
      border-{$direction}-color: rgba(255, 255, 255, .96); // @stylint ignore
    }
  }

  .flyout-backdrop {
    {$direction}: -50px; // @stylint ignore
  }

  &.active.flyout-animate .flyout-modal {
    animation: flyout-slide- + $direction .3s ease forwards; // @stylint ignore
  }
}

.flyout-top, .flyout-bottom {
  flyout-axis(y);
}

.flyout-right, .flyout-left {
  flyout-axis(x);
}

for $direction in (top right bottom left) {
  .flyout-{$direction} { // @stylint ignore
    flyout-direction($direction); // @stylint ignore
  }
}

.flyout-fluid {
  .flyout-modal {
    width: auto;

    white-space: nowrap;
  }
}

/*!
Flyout Alignment
Alignment classes anchor the flyout to the right or left side of its toggle,
instead of centering it. This is useful when a flyout should rest on the edge
of a container.
To use, apply the `.flyout-align` and `.flyout-align-{direction}` classes to
the `.flyout` and the `.flyout-align-caret` to the toggle.
**NOTE**: `.flyout-align` currently only works with `.flyout-top` and
`.flyout-bottom`. It is incompatible with `.flyout-left` and `.flyout-right`.
.flyout-top.flyout-align-right - Right aligned modal.
.flyout-top.flyout-align-left - Left aligned modal.
.flyout-bottom.flyout-align-right - Right aligned modal.
.flyout-bottom.flyout-align-left - Left aligned modal.
Styleguide 8.6
*/

.flyout-align {
  .flyout-modal {
    &:before,
    &:after {
      display: none;
    }
  }
}

.flyout-align-caret {
  wmzindex("flyout-align-caret");

  position: relative;

  @extend $flyout-caret;

  // Hacky min-width and min-height magic numbers necessary to prevent caret
  // from displaying incorrectly when flyout toggles are very small. In these
  // cases, the caret is rendered *outside* of the flyout modal unless a minimum
  // size is specified.
  min-width: 44px;
  min-height: 18px;

  &:before,
  &:after {
    display: none;
  }

  .flyout.active & {
    &:before,
    &:after {
      display: block;
    }
  }

  for $direction in (top bottom) {
    $opposite = opposite-position($direction);
    .flyout-{$direction} & { // @stylint ignore
      &:before,
      &:after {
        {$opposite}: 100%; // @stylint ignore
        {$direction}: auto !important; // @stylint ignore
      }

      &:before {
        margin-{$opposite}: 4px; // @stylint ignore

        .no-boxshadow & {
          margin-{$opposite}: -14px; // @stylint ignore
        }
      }

      &:after {
        margin-{$opposite}: -12px; // @stylint ignore

        .no-boxshadow & {
          margin-{$opposite}: -10px; // @stylint ignore
        }
      }
    }
  }
}

for $direction in (right left) {
  .flyout-align-{$direction} { // @stylint ignore
    .flyout-modal {
      {$direction}: 0; // @stylint ignore
      {opposite-position($direction)}: auto; // @stylint ignore

      margin-{$direction}: 0; // @stylint ignore
    }
  }
}

.flyout-align-right .flyout-modal {
  transform: translateX(50%);
}

/*!
Flyout Close Button
Styleguide 8.7
*/

.flyout-close {
  position: absolute;
  top: 10px;
  right: @top;

  width: 18px;
  height: @width;
  padding: 0 0 1px;
  border: 0;
  border-radius: 50%;

  background: $grey-cool;
  color: $white;
  font-size: 13px;
  line-height: 0;
  text-align: center;
  outline: 0;
}

.flyout-backdrop {
  display: none;
}

.flyout-trigger {
  wmzindex("basic");

  position: relative;
}

.flyout-center {
  .flyout-modal {
    top: 50%;
    transform: translate3d(-50%, -50%, 0);
  }

  .flyout-modal,
  .flyout-align-caret {
    &:before {
      display: none;
    }
  }
}

.flyout-align-center, .flyout-align-bottom {
  .flyout-modal {
    left: 50%;
    right: auto;
    margin-left: 0;
  }
}

// Hacks to deal with lithe-extras conflicts...
.flyout-modal-wide, .flyout-modal{
  margin-left: 0;
}
.flyout.active > .flyout-modal {
  animation: none;
}
