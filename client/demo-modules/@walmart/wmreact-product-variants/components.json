{
  "library": "@walmart/wmreact-product-variants",
  "description": "Set of components related to displaying variants",
  "components": [
    {
      "displayName": "ProductVariantDropdown",
      "methods": [],
      "props": {
        "title": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"an option\"",
            "computed": false
          },
          "description": "Default title for the unselected option"
        },
        "variantUnselectedError": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": "Is variant not selected as part of the Unselected Variants Experience"
        },
        "variantOptions": {
          "type": {
            "name": "array"
          },
          "required": true,
          "description": "A list of variant options. Internally its a list of objects,\n   containing props like: id, name, status."
        },
        "disabledVariantClassName": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"u-textGrey\"",
            "computed": false
          },
          "description": "A className for displaying a disabled state on variant option.\n   Used when the variant status is not in stock."
        },
        "onVariantClick": {
          "type": {
            "name": "func"
          },
          "required": false,
          "defaultValue": {
            "value": "() => {/*no-op*/}",
            "computed": false
          },
          "description": "Callback function upon variant click. Usually handled in\n   a higher order component."
        }
      },
      "fileName": "./src/components/product-variant-dropdown.jsx",
      "description": "The product variant dropdown.\n\n For example this is how we use this component.\n\n ```jsx\n <ProductVariantDropdown\n  onVariantClick={(ev)=>{console.log(ev)}}\n  variantOptions={[{\n    id: \"color_blue\",\n    name: \"Blue\",\n    status: \"in stock\"\n  }, {\n    id: \"color_red\",\n    name: \"Red\",\n    status: \"out of stock\"\n  }, {\n    id: \"color_green\",\n    name: \"Green\",\n    status: \"not available\"\n  }]}/>\n ```",
      "return": "Element tree",
      "param": "Props",
      "import": "{ProductVariantDropdown}",
      "flags": "noVisibleRender",
      "component": "ProductVariantDropdown",
      "playground": [
        {
          "title": "ProductVariantDropdown",
          "flags": {},
          "code": " <ProductVariantDropdown\n  onVariantClick={(ev)=>{console.log(ev)}}\n  variantOptions={[{\n    id: \"color_blue\",\n    name: \"Blue\",\n    status: \"in stock\"\n  }, {\n    id: \"color_red\",\n    name: \"Red\",\n    status: \"out of stock\"\n  }, {\n    id: \"color_green\",\n    name: \"Green\",\n    status: \"not available\"\n }]}/>\n "
        }
      ],
      "hasProps": true
    },
    {
      "displayName": "ProductVariantOption",
      "methods": [],
      "props": {
        "variantName": {
          "type": {
            "name": "string"
          },
          "required": true,
          "description": "The actual variantName or label"
        },
        "displaySuffix": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": "When set to true adds a suffix option"
        },
        "suffix": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"\"",
            "computed": false
          },
          "description": "The suffix string."
        },
        "disabled": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": "When set to true adds a disabled state class"
        },
        "disabledVariantClassName": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"u-textGrey\"",
            "computed": false
          },
          "description": "A disabled state className"
        }
      },
      "fileName": "./src/components/product-variant-option.jsx",
      "description": "The product variant dropdown option.\n\n For example this is how we use this component.\n\n ```jsx\n <ProductVariantOption\n  variantName=\"Color Red\"\n  suffix=\"- Out of stock\"\n  disabled={true}\n  disabledVariantClassName=\"u-textGrey\"\n  displaySuffix={true}/>\n ```",
      "return": "Element tree",
      "param": "Props",
      "import": "{ProductVariantOption}",
      "flags": "noVisibleRender",
      "component": "ProductVariantOption",
      "playground": [
        {
          "title": "ProductVariantOption",
          "flags": {},
          "code": " <ProductVariantOption\n  variantName=\"Color Red\"\n  suffix=\"- Out of stock\"\n  disabled={true}\n  disabledVariantClassName=\"u-textGrey\"\n  displaySuffix={true}/>\n "
        }
      ],
      "hasProps": true
    },
    {
      "displayName": "ProductVariantSwatch",
      "methods": [
        {
          "name": "_toggleVariant",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": {
            "type": {
              "name": "void"
            }
          }
        },
        {
          "name": "_getClasses",
          "docblock": null,
          "modifiers": [],
          "params": [
            {
              "name": "{className}",
              "type": null
            }
          ],
          "returns": {
            "type": {
              "name": "string"
            }
          }
        },
        {
          "name": "_getVariantOptions",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": {
            "type": {
              "name": "signature",
              "type": "object",
              "raw": "{\n  \"id\": string,\n  \"name\": string,\n  \"selected\": boolean,\n  \"swatchImageUrl\": string,\n  \"status\": string,\n  \"categoryId\": string,\n  \"productIds\": Array<string>,\n  \"availabilityStatus\": string,\n  \"rank\": number\n}",
              "signature": {
                "properties": [
                  {
                    "key": "id",
                    "value": {
                      "name": "string",
                      "required": true
                    }
                  },
                  {
                    "key": "name",
                    "value": {
                      "name": "string",
                      "required": true
                    }
                  },
                  {
                    "key": "selected",
                    "value": {
                      "name": "boolean",
                      "required": true
                    }
                  },
                  {
                    "key": "swatchImageUrl",
                    "value": {
                      "name": "string",
                      "required": true
                    }
                  },
                  {
                    "key": "status",
                    "value": {
                      "name": "string",
                      "required": true
                    }
                  },
                  {
                    "key": "categoryId",
                    "value": {
                      "name": "string",
                      "required": true
                    }
                  },
                  {
                    "key": "productIds",
                    "value": {
                      "name": "Array",
                      "elements": [
                        {
                          "name": "string"
                        }
                      ],
                      "raw": "Array<string>",
                      "required": true
                    }
                  },
                  {
                    "key": "availabilityStatus",
                    "value": {
                      "name": "string",
                      "required": true
                    }
                  },
                  {
                    "key": "rank",
                    "value": {
                      "name": "number",
                      "required": true
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "name": "_renderVariantItems",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": {
            "type": {
              "name": "ReactElement"
            }
          }
        },
        {
          "name": "_renderVariantExpander",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": {
            "type": {
              "name": "ReactElement",
              "nullable": true
            }
          }
        },
        {
          "name": "_renderVariantsComponent",
          "docblock": null,
          "modifiers": [],
          "params": [
            {
              "name": "{small, swatches}",
              "type": null
            }
          ],
          "returns": {
            "type": {
              "name": "ReactElement"
            }
          }
        }
      ],
      "props": {
        "swatches": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "true",
            "computed": false
          },
          "description": "True if the variants are swatches."
        },
        "small": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": "True if the variants are small."
        },
        "type": {
          "type": {
            "name": "enum",
            "value": [
              {
                "value": "\"button\"",
                "computed": false
              },
              {
                "value": "\"checkbox\"",
                "computed": false
              },
              {
                "value": "\"radio\"",
                "computed": false
              }
            ]
          },
          "required": false,
          "defaultValue": {
            "value": "\"radio\"",
            "computed": false
          },
          "description": "The type of control to use for this variant."
        },
        "isImageSwatch": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "true",
            "computed": false
          },
          "description": "When set to true, uses the swatchImageUrl prop as a\n    background image."
        },
        "variants": {
          "type": {
            "name": "arrayOf",
            "value": {
              "name": "shape",
              "value": "unknown"
            }
          },
          "required": true,
          "description": "An array of variants. Each variant is an object of type\n    Variant."
        },
        "swatchToggleCount": {
          "type": {
            "name": "number"
          },
          "required": false,
          "defaultValue": {
            "value": "4",
            "computed": false
          },
          "description": "Number of swatches to display before displaying a toggle button.\n    Does not display a toggle button when the total number of variants\n    is less than or equal to swatchToggleCount."
        },
        "selectedVariantName": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"\"",
            "computed": false
          },
          "description": "Name of the selected variant."
        },
        "selectedVariantId": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"\"",
            "computed": false
          },
          "description": "Id of the selected variant."
        },
        "onVariantClick": {
          "type": {
            "name": "func"
          },
          "required": false,
          "defaultValue": {
            "value": "() => {/*no-op*/}",
            "computed": false
          },
          "description": "Callback function upon variant click. Usually handled in\n    a higher order component. Attatches a variantId property to the\n    ev.currentTarget.dataset. Used to access the current variant info."
        },
        "onVariantMouseLeave": {
          "type": {
            "name": "func"
          },
          "required": false,
          "defaultValue": {
            "value": "() => {/*no-op*/}",
            "computed": false
          },
          "description": "Callback function upon variant mouseout. Usually handled in\n    a higher order component. Attatches a variantId property to the\n    ev.currentTarget.dataset. Used to access the current variant info."
        },
        "onVariantMouseEnter": {
          "type": {
            "name": "func"
          },
          "required": false,
          "defaultValue": {
            "value": "() => {/*no-op*/}",
            "computed": false
          },
          "description": "Callback function upon variant mouseenter. Usually handled in\n    a higher order component. Attatches a variantId property to the\n    ev.currentTarget.dataset. Used to access the current variant info."
        },
        "onExpanderClick": {
          "type": {
            "name": "func"
          },
          "required": false,
          "defaultValue": {
            "value": "() => {/*no-op*/}",
            "computed": false
          },
          "description": "Callback function upon expander click. Usually handled in\n    a higher order component. Gets value of `collapsed` state\n    passed as an argument"
        }
      },
      "fileName": "./src/components/product-variant-swatch.jsx",
      "description": "A product specific variants component. Displays certain number of variants based on the\n  passed in swatchToggleCount property. Accepts a variants property which is same as\n  the product terra variants model.\n\n For example this is how we use this component.\n\n ```jsx\n <ProductVariantSwatch\n  selectedVariantId=\"actual_color-arcticwhite\"\n  selectedVariantName=\"Arctic White\"\n  onVariantClick={(ev)=>{console.log(ev.currentTarget.dataset.variantId);}}\n  onVariantMouseLeave={(ev)=>{console.log(ev.currentTarget.dataset.variantId);}}\n  onVariantMouseEnter={(ev)=>{console.log(ev.currentTarget.dataset.variantId);}}\n  onExpanderClick={(ev)=>{console.log(ev.currentTarget.dataset.isCollapsed);}}\n  variants={[\n    {\n      id: \"actual_color-greyplaid\",\n      name: \"Grey Plaid\",\n      selected:false,\n      swatchImageUrl: \"http://dummyimage.com/60x60/7766EE/fff\",\n      status: \"out of stock\"\n    },{\n      id: \"actual_color-greyplaid1\",\n      name: \"Grey Plaid1\",\n      selected:false,\n      swatchImageUrl: \"http://dummyimage.com/60x60/448899/fff\",\n      status: \"out of stock\"\n    },{\n      id: \"actual_color-greyplaid2\",\n      name: \"Grey Plaid2\",\n      selected:false,\n      swatchImageUrl: \"http://dummyimage.com/60x60/EECCAA/fff\",\n      status: \"out of stock\"\n    },{\n      id: \"actual_color-greyplaid3\",\n      name: \"Grey Plaid4\",\n      selected:false,\n      swatchImageUrl: \"http://dummyimage.com/60x60/22FF99/fff\",\n      status: \"out of stock\"\n    },{\n      id: \"actual_color-greyplaid4\",\n      name: \"Grey Plaid4\",\n      selected:false,\n      swatchImageUrl: \"http://dummyimage.com/60x60/5599AA/fff\",\n      status: \"out of stock\"\n    },{\n      id: \"actual_color-greyplaid5\",\n      name: \"Grey Plaid5\",\n      selected:false,\n      swatchImageUrl: \"http://dummyimage.com/60x60/223344/fff\",\n      status: \"out of stock\"\n    }, {\n      id: \"actual_color-arcticwhite\",\n      name: \"Arctic White\",\n      selected:true,\n      swatchImageUrl: \"http://dummyimage.com/60x60/667788/fff\",\n      status: \"in stock\"}]}/>\n ```",
      "import": "{ProductVariantSwatch}",
      "flags": "noVisibleRender",
      "component": "ProductVariantSwatch",
      "playground": [
        {
          "title": "ProductVariantSwatch",
          "flags": {},
          "code": " <ProductVariantSwatch\n  selectedVariantId=\"actual_color-arcticwhite\"\n  selectedVariantName=\"Arctic White\"\n  onVariantClick={(ev)=>{console.log(ev.currentTarget.dataset.variantId);}}\n  onVariantMouseLeave={(ev)=>{console.log(ev.currentTarget.dataset.variantId);}}\n  onVariantMouseEnter={(ev)=>{console.log(ev.currentTarget.dataset.variantId);}}\n  onExpanderClick={(ev)=>{console.log(ev.currentTarget.dataset.isCollapsed);}}\n  variants={[\n    {\n      id: \"actual_color-greyplaid\",\n      name: \"Grey Plaid\",\n      selected:false,\n      swatchImageUrl: \"http://dummyimage.com/60x60/7766EE/fff\",\n      status: \"out of stock\"\n    },{\n      id: \"actual_color-greyplaid1\",\n      name: \"Grey Plaid1\",\n      selected:false,\n      swatchImageUrl: \"http://dummyimage.com/60x60/448899/fff\",\n      status: \"out of stock\"\n    },{\n      id: \"actual_color-greyplaid2\",\n      name: \"Grey Plaid2\",\n      selected:false,\n      swatchImageUrl: \"http://dummyimage.com/60x60/EECCAA/fff\",\n      status: \"out of stock\"\n    },{\n      id: \"actual_color-greyplaid3\",\n      name: \"Grey Plaid4\",\n      selected:false,\n      swatchImageUrl: \"http://dummyimage.com/60x60/22FF99/fff\",\n      status: \"out of stock\"\n    },{\n      id: \"actual_color-greyplaid4\",\n      name: \"Grey Plaid4\",\n      selected:false,\n      swatchImageUrl: \"http://dummyimage.com/60x60/5599AA/fff\",\n      status: \"out of stock\"\n    },{\n      id: \"actual_color-greyplaid5\",\n      name: \"Grey Plaid5\",\n      selected:false,\n      swatchImageUrl: \"http://dummyimage.com/60x60/223344/fff\",\n      status: \"out of stock\"\n    }, {\n      id: \"actual_color-arcticwhite\",\n      name: \"Arctic White\",\n      selected:true,\n      swatchImageUrl: \"http://dummyimage.com/60x60/667788/fff\",\n      status: \"in stock\"}]}/>\n "
        }
      ],
      "hasProps": true
    },
    {
      "displayName": "ProductVariantType",
      "methods": [
        {
          "name": "_getClasses",
          "docblock": null,
          "modifiers": [],
          "params": [
            {
              "name": "{className}",
              "type": null
            }
          ],
          "returns": {
            "type": {
              "name": "string"
            }
          }
        },
        {
          "name": "_getVariantDropDownOptions",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": {
            "type": {
              "name": "Array",
              "elements": [
                {
                  "name": "signature",
                  "type": "object",
                  "raw": "{name:string, id: string, status:string}",
                  "signature": {
                    "properties": [
                      {
                        "key": "name",
                        "value": {
                          "name": "string",
                          "required": true
                        }
                      },
                      {
                        "key": "id",
                        "value": {
                          "name": "string",
                          "required": true
                        }
                      },
                      {
                        "key": "status",
                        "value": {
                          "name": "string",
                          "required": true
                        }
                      }
                    ]
                  }
                }
              ],
              "raw": "Array<{name:string, id: string, status:string}>"
            }
          }
        },
        {
          "name": "_onVariantMouseLeave",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": null
        },
        {
          "name": "_onVariantMouseEnter",
          "docblock": null,
          "modifiers": [],
          "params": [
            {
              "name": "variant",
              "type": null
            }
          ],
          "returns": null
        },
        {
          "name": "_renderLabelComponent",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": {
            "type": {
              "name": "ReactElement"
            }
          }
        },
        {
          "name": "invalidate",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": {
            "type": {
              "name": "void"
            }
          }
        },
        {
          "name": "isSelected",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": {
            "type": {
              "name": "boolean"
            }
          }
        },
        {
          "name": "_onVariantDropdownClick",
          "docblock": null,
          "modifiers": [],
          "params": [
            {
              "name": "option",
              "type": null
            }
          ],
          "returns": {
            "type": {
              "name": "void"
            }
          }
        },
        {
          "name": "_onVariantSwatchClick",
          "docblock": null,
          "modifiers": [],
          "params": [
            {
              "name": "variant",
              "type": null
            }
          ],
          "returns": {
            "type": {
              "name": "void"
            }
          }
        },
        {
          "name": "_renderDropdownComponent",
          "docblock": null,
          "modifiers": [],
          "params": [
            {
              "name": "variantOptions",
              "type": null
            }
          ],
          "returns": {
            "type": {
              "name": "ReactElement"
            }
          }
        },
        {
          "name": "_renderSwatchComponent",
          "docblock": null,
          "modifiers": [],
          "params": [
            {
              "name": "visibleWidth",
              "type": null
            }
          ],
          "returns": {
            "type": {
              "name": "ReactElement"
            }
          }
        },
        {
          "name": "_renderVariantTypeComponent",
          "docblock": null,
          "modifiers": [],
          "params": [
            {
              "name": "visibleWidth",
              "type": null
            }
          ],
          "returns": {
            "type": {
              "name": "ReactElement"
            }
          }
        },
        {
          "name": "_renderLayoutComponent",
          "docblock": null,
          "modifiers": [],
          "params": [
            {
              "name": "visibleWidth",
              "type": null
            }
          ],
          "returns": {
            "type": {
              "name": "ReactElement"
            }
          }
        },
        {
          "name": "_getBreakPoint",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": {
            "type": {
              "name": "string"
            }
          }
        }
      ],
      "props": {
        "variantType": {
          "type": {
            "name": "enum",
            "value": [
              {
                "value": "\"SWATCH\"",
                "computed": false
              },
              {
                "value": "\"DROPDOWN\"",
                "computed": false
              }
            ]
          },
          "required": false,
          "defaultValue": {
            "value": "\"DROPDOWN\"",
            "computed": false
          },
          "description": "Type of the variant."
        },
        "name": {
          "type": {
            "name": "string"
          },
          "required": true,
          "description": "The name of the variant type for e.g. Actual Color, Size etc."
        },
        "id": {
          "type": {
            "name": "string"
          },
          "required": true,
          "description": "The id of the variant type."
        },
        "selectedVariantName": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"\"",
            "computed": false
          },
          "description": "Selected variant name."
        },
        "selectedVariantId": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"\"",
            "computed": false
          },
          "description": "Selected variant id."
        },
        "variants": {
          "type": {
            "name": "arrayOf",
            "value": {
              "name": "shape",
              "value": "unknown"
            }
          },
          "required": true,
          "description": "An array of variants. Each variant is an object of type\n    Variant."
        },
        "onVariantClick": {
          "type": {
            "name": "func"
          },
          "required": false,
          "defaultValue": {
            "value": "() => {/*no-op*/}",
            "computed": false
          },
          "description": "Callback function upon variant click. Usually handled in\n   a higher order component."
        },
        "onVariantMouseLeave": {
          "type": {
            "name": "func"
          },
          "required": false,
          "defaultValue": {
            "value": "() => {/*no-op*/}",
            "computed": false
          },
          "description": "Callback function upon variant mouseleave. Usually handled in\n    a higher order component. Attatches a variantId property to the\n    ev.currentTarget.dataset. Used to access the current variant info."
        },
        "onVariantMouseEnter": {
          "type": {
            "name": "func"
          },
          "required": false,
          "defaultValue": {
            "value": "() => {/*no-op*/}",
            "computed": false
          },
          "description": "Callback function upon variant hover in. Usually handled in\n    a higher order component. Attatches a variantId property to the\n    ev.currentTarget.dataset. Used to access the current variant info."
        },
        "isValid": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "true",
            "computed": false
          },
          "description": "To to render validated state for variants."
        },
        "swatchToggleCountPerBreakpoint": {
          "type": {
            "name": "shape",
            "value": {
              "x-small": {
                "name": "shape",
                "value": {
                  "swatchToggleCount": {
                    "name": "number",
                    "required": false
                  }
                },
                "required": false
              },
              "small": {
                "name": "shape",
                "value": {
                  "swatchToggleCount": {
                    "name": "number",
                    "required": false
                  }
                },
                "required": false
              },
              "medium": {
                "name": "shape",
                "value": {
                  "swatchToggleCount": {
                    "name": "number",
                    "required": false
                  }
                },
                "required": false
              },
              "large": {
                "name": "shape",
                "value": {
                  "swatchToggleCount": {
                    "name": "number",
                    "required": false
                  }
                },
                "required": false
              },
              "x-large": {
                "name": "shape",
                "value": {
                  "swatchToggleCount": {
                    "name": "number",
                    "required": false
                  }
                },
                "required": false
              }
            }
          },
          "required": false,
          "defaultValue": {
            "value": "{\n  \"x-small\": {\n    swatchToggleCount: 5\n  },\n  \"small\": {\n    swatchToggleCount: 6\n  },\n  \"medium\": {\n    swatchToggleCount: 7\n  },\n  \"large\": {\n    swatchToggleCount: 7\n  },\n  \"x-large\": {\n    swatchToggleCount: 8\n  }\n}",
            "computed": false
          },
          "description": "Number of swatches to display before displaying a toggle button per breakpoint.\n    Does not display a toggle button when the total number of variants\n    is less than or equal to swatchToggleCount."
        }
      },
      "fileName": "./src/components/product-variant-type.jsx",
      "description": "The product variant type, displays a list of variants (for e.g. dropdown, swatches).\n\n For example this is how we use this component.\n\n ```jsx\n <div>\n  <h3>Swatch variant Example</h3>\n  <ProductVariantType variantType=\"SWATCH\"\n  id=\"actual_color\"\n  selectedVariantName=\"Arctic White\"\n  selectedVariantId=\"actual_color-arcticwhite\"\n  onVariantClick={(ev)=>{console.log(ev.currentTarget.dataset.variantId);}}\n  onVariantMouseLeave={(ev)=>{console.log(ev.currentTarget.dataset.variantId);}}\n  onVariantMouseEnter={(ev)=>{console.log(ev.currentTarget.dataset.variantId);}}\n  name=\"Actual Color\" variants={[\n  {\n    id: \"actual_color-greyplaid\",\n    name: \"Grey Plaid\",\n    selected:false,\n    swatchImageUrl: \"http://dummyimage.com/60x60/7766EE/fff\",\n    status: \"out of stock\"\n  }, {\n    id: \"actual_color-arcticwhite\",\n    name: \"Arctic White\",\n    selected:true,\n    swatchImageUrl: \"http://dummyimage.com/60x60/448899/fff\",\n    status: \"in stock\"}]}/>\n  <h3>Dropdown variant Example</h3>\n  <ProductVariantType variantType=\"DROPDOWN\"\n    id=\"size\"\n    name=\"Size\"\n    selectedVariantName=\"Full\"\n    selectedVariantId=\"size-full\"\n    onVariantClick={(ev)=>{console.log(ev);}}\n    variants={[\n      {\n        id: \"size-full\",\n        name: \"Full\",\n        status: \"in stock\",\n        selected: true\n      }, {\n        id: \"size-queen\",\n        name: \"Queen\",\n        status: \"in stock\",\n        selected: false\n      }]}/>\n </div>\n ```",
      "import": "{ProductVariantType}",
      "flags": "noVisibleRender",
      "component": "ProductVariantType",
      "playground": [
        {
          "title": "ProductVariantType",
          "flags": {},
          "code": " <div>\n  <h3>Swatch variant Example</h3>\n  <ProductVariantType variantType=\"SWATCH\"\n  id=\"actual_color\"\n  selectedVariantName=\"Arctic White\"\n  selectedVariantId=\"actual_color-arcticwhite\"\n  onVariantClick={(ev)=>{console.log(ev.currentTarget.dataset.variantId);}}\n  onVariantMouseLeave={(ev)=>{console.log(ev.currentTarget.dataset.variantId);}}\n  onVariantMouseEnter={(ev)=>{console.log(ev.currentTarget.dataset.variantId);}}\n  name=\"Actual Color\" variants={[\n  {\n    id: \"actual_color-greyplaid\",\n    name: \"Grey Plaid\",\n    selected:false,\n    swatchImageUrl: \"http://dummyimage.com/60x60/7766EE/fff\",\n    status: \"out of stock\"\n  }, {\n    id: \"actual_color-arcticwhite\",\n    name: \"Arctic White\",\n    selected:true,\n    swatchImageUrl: \"http://dummyimage.com/60x60/448899/fff\",\n    status: \"in stock\"}]}/>\n  <h3>Dropdown variant Example</h3>\n  <ProductVariantType variantType=\"DROPDOWN\"\n    id=\"size\"\n    name=\"Size\"\n    selectedVariantName=\"Full\"\n    selectedVariantId=\"size-full\"\n    onVariantClick={(ev)=>{console.log(ev);}}\n    variants={[\n      {\n        id: \"size-full\",\n        name: \"Full\",\n        status: \"in stock\",\n        selected: true\n      }, {\n        id: \"size-queen\",\n        name: \"Queen\",\n        status: \"in stock\",\n        selected: false\n      }]}/>\n </div>\n "
        }
      ],
      "hasProps": true
    },
    {
      "displayName": "VariantExpander",
      "methods": [],
      "props": {
        "active": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": "True if this is active."
        },
        "less": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": "True if we should be showing as less."
        }
      },
      "fileName": "./src/components/variant-expander.jsx",
      "description": "A variant expander button",
      "examples": "```jsx\n <Variants.Expander active={true} less={true} />\n ```",
      "return": "Element tree",
      "param": "Props",
      "component": "VariantExpander",
      "import": "{Variants}",
      "references": "Variants",
      "playground": [
        {
          "title": "VariantExpander",
          "flags": {},
          "code": " <Variants.Expander active={true} less={true} />\n "
        }
      ],
      "hasProps": true
    },
    {
      "displayName": "Variants",
      "methods": [],
      "props": {
        "small": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": "True if the variants are small"
        },
        "swatches": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": "True if the variants are swatches"
        }
      },
      "fileName": "./src/components/variants.jsx",
      "description": "Variants container",
      "examples": "```jsx\n <div>\n  <Variants>\n    <Variants.Item>S</Variants.Item>\n    <Variants.Item selected={true}>M</Variants.Item>\n    <Variants.Item>L</Variants.Item>\n    <Variants.Item disabled={true}>XL</Variants.Item>\n    <Variants.Item unavailable={true}>XXL</Variants.Item>\n  </Variants>\n  <Variants small={true} swatches={true}>\n    <Variants.Item type='checkbox' disabled={true} swatch='#fead41'>Yellow</Variants.Item>\n    <Variants.Item type='checkbox' selected={true} swatch='#d40b23'>Red</Variants.Item>\n    <Variants.Item type='checkbox' unavailable={true} swatch='#47d9bf'>Teal</Variants.Item>\n    <Variants.Expander />\n  </Variants>\n  <Variants swatches={true}>\n    <Variants.Item type='radio' selected={true} swatch='#fead41'>Yellow</Variants.Item>\n    <Variants.Item type='radio' disabled={true} swatch='#d40b23'>Red</Variants.Item>\n    <Variants.Item type='radio' unavailable={true} swatch='#47d9bf'>Teal</Variants.Item>\n    <Variants.Item index={2} type='radio' isImageSwatch={true}\n      swatch='http://placekitten.com/g/1024/1024'>\n      Kitten\n    </Variants.Item>\n    <Variants.Expander active={true} less={true} />\n  </Variants>\n </div>\n ```",
      "return": "Element tree",
      "param": "Props",
      "component": "Variants",
      "import": "{Variants}",
      "references": "Variants",
      "playground": [
        {
          "title": "Variants",
          "flags": {},
          "code": " <div>\n  <h4>Variants as buttons</h4>\n  <Variants>\n    <Variants.Item index={0}>S</Variants.Item>\n    <Variants.Item index={1} selected={true}>M</Variants.Item>\n    <Variants.Item index={2}>L</Variants.Item>\n    <Variants.Item index={3} disabled={true}>XL</Variants.Item>\n    <Variants.Item index={4} unavailable={true}>XXL</Variants.Item>\n  </Variants>\n <h4>Small variants</h4>\n  <Variants small={true} swatches={true}>\n    <Variants.Item index={0} type='checkbox' disabled={true} swatch='#fead41'>\n      Yellow\n    </Variants.Item>\n    <Variants.Item index={1} type='checkbox' selected={true} swatch='#d40b23'>\n      Red\n    </Variants.Item>\n    <Variants.Item index={2} type='checkbox' unavailable={true} swatch='#47d9bf'>\n      Teal\n    </Variants.Item>\n    <Variants.Expander />\n  </Variants>\n <h4>Large variants</h4>\n  <Variants swatches={true}>\n    <Variants.Item index={0} type='radio' selected={true} swatch='#fead41'>\n      Yellow\n    </Variants.Item>\n    <Variants.Item index={1} type='radio' disabled={true} swatch='#d40b23'>\n      Red\n    </Variants.Item>\n    <Variants.Item index={2} type='radio' unavailable={true} swatch='#47d9bf'>\n      Teal\n    </Variants.Item>\n    <Variants.Item index={2} type='radio' isImageSwatch={true}\n      swatch='http://placekitten.com/g/1024/1024'>\n      Kitten\n    </Variants.Item>\n    <Variants.Expander active={true} less={true} />\n  </Variants>\n </div>\n "
        }
      ],
      "hasProps": true
    }
  ]
}