{
  "library": "@walmart/wmreact-product-higher-order-components",
  "description": "A set of react components for non-atomic product components",
  "components": [
    {
      "methods": [],
      "props": {
        "products": {
          "type": {
            "name": "array"
          },
          "required": false,
          "defaultValue": {
            "value": "[]",
            "computed": false
          },
          "description": "The array of products"
        }
      },
      "fileName": "./src/components/products-carousel.jsx",
      "description": "Products carousel.",
      "examples": "```jsx\n<ProductsCarousel products={productsData} />\n```",
      "component": "ProductsCarousel",
      "import": "{ProductsCarousel}",
      "playground": [
        {
          "title": "ProductsCarousel",
          "flags": {},
          "code": "<ProductsCarousel products={productsData} />\n"
        }
      ],
      "hasProps": true
    },
    {
      "methods": [
        {
          "name": "onScroll",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": null
        },
        {
          "name": "_checkTabInView",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": null
        },
        {
          "name": "_clickTab",
          "docblock": null,
          "modifiers": [],
          "params": [
            {
              "name": "index",
              "type": null
            }
          ],
          "returns": null
        },
        {
          "name": "_renderLabels",
          "docblock": null,
          "modifiers": [],
          "params": [
            {
              "name": "child",
              "type": null
            },
            {
              "name": "index",
              "type": null
            }
          ],
          "returns": {
            "type": {
              "name": "ReactElement"
            }
          }
        },
        {
          "name": "_renderTabs",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": {
            "type": {
              "name": "ReactElement"
            }
          }
        },
        {
          "name": "_renderFixie",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": {
            "type": {
              "name": "ReactElement"
            }
          }
        }
      ],
      "props": {
        "tabs": {
          "type": {
            "name": "array"
          },
          "required": false,
          "description": ""
        },
        "selected": {
          "type": {
            "name": "number"
          },
          "required": false,
          "description": ""
        },
        "initYOffset": {
          "type": {
            "name": "number"
          },
          "required": false,
          "description": ""
        },
        "minScreen": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": ""
        }
      },
      "fileName": "./src/components/sticky-nav.jsx",
      "description": "Basic Structure for Sticky Nav\n<div>\n  <StickyNav selected={0} minScreen=\"large\">\n    <StickNav.Row title=\"Foo\" link=\"foo\">content</StickyNav.Row>\n    <StickNav.Row title=\"Bar\" link=\"bar\">content</StickyNav.Row>\n    <StickNav.Row title=\"Baz\" link=\"baz\">content</StickyNav.Row>\n  </StickyNav>\n</div>",
      "hasProps": true
    },
    {
      "methods": [],
      "props": {
        "iconType": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"\"",
            "computed": false
          },
          "description": "Children to render in container"
        },
        "messaging": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"\"",
            "computed": false
          },
          "description": ""
        },
        "launchModalText": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"\"",
            "computed": false
          },
          "description": ""
        },
        "showMessagingSection": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": ""
        },
        "onClickLaunchModal": {
          "type": {
            "name": "func"
          },
          "required": false,
          "defaultValue": {
            "value": "() => {/*no-op*/}",
            "computed": false
          },
          "description": ""
        }
      },
      "fileName": "./src/components/products-fulfillment-messaging.jsx",
      "description": "Basic component for Buying Options Table messaging\nEx: Pick up options messaging",
      "examples": "```jsx\n<div>\n <ProductsFulfillmentMessaging\n  messaging={Text/html}\n  iconType=\"truck\"\n  launchModalText=\"Shipping Pass\"\n  onClickLaunchModal={() => {console.log(\"Some click func\")}}\n />\n</div>",
      "hasProps": true
    },
    {
      "displayName": "Comparison",
      "methods": [],
      "props": {
        "productData": {
          "type": {
            "name": "array"
          },
          "required": false,
          "defaultValue": {
            "value": "[]",
            "computed": false
          },
          "description": "The product data"
        }
      },
      "fileName": "./src/components/comparison.jsx",
      "description": "Comparison table that switch from small to large based on size.",
      "examples": "```jsx\n<Comparison productData={comparisonData}/>\n```",
      "component": "Comparison",
      "import": "{Comparison}",
      "playground": [
        {
          "title": "Comparison.Large",
          "flags": {},
          "code": "<Comparison productData={comparisonData}/>\n"
        }
      ],
      "hasProps": true
    },
    {
      "description": "",
      "methods": [
        {
          "name": "_renderProductItem",
          "docblock": null,
          "modifiers": [],
          "params": [
            {
              "name": "product",
              "type": null
            },
            {
              "name": "index",
              "type": null
            }
          ],
          "returns": {
            "type": {
              "name": "ReactElement"
            }
          }
        },
        {
          "name": "_renderBase",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": {
            "type": {
              "name": "ReactElement"
            }
          }
        },
        {
          "name": "_renderAnimated",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": {
            "type": {
              "name": "ReactElement"
            }
          }
        },
        {
          "name": "_renderStoreItemGrid",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": {
            "type": {
              "name": "ReactElement"
            }
          }
        },
        {
          "name": "_renderStoreItemTiles",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": {
            "type": {
              "name": "ReactElement"
            }
          }
        }
      ],
      "props": {
        "products": {
          "type": {
            "name": "array"
          },
          "required": false,
          "defaultValue": {
            "value": "[]",
            "computed": false
          },
          "description": "The products"
        },
        "animated": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "true",
            "computed": false
          },
          "description": "True if it's animated"
        },
        "columns": {
          "type": {
            "name": "object"
          },
          "required": false,
          "defaultValue": {
            "value": "{\n  medium: 3,\n  large: 4\n}",
            "computed": false
          },
          "description": "Number of columns to display"
        },
        "tileType": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"\"",
            "computed": false
          },
          "description": "Type of tile"
        },
        "automationId": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "Automation Id"
        }
      },
      "fileName": "./src/components/products-grid.jsx",
      "hasProps": true
    },
    {
      "displayName": "Comparison.Large",
      "methods": [
        {
          "name": "_renderAttributeNames",
          "docblock": null,
          "modifiers": [],
          "params": [
            {
              "name": "prData",
              "type": {
                "name": "Object"
              }
            }
          ],
          "returns": null
        },
        {
          "name": "_renderAttributesTable",
          "docblock": null,
          "modifiers": [],
          "params": [
            {
              "name": "prData",
              "type": {
                "name": "Object"
              }
            }
          ],
          "returns": {
            "type": {
              "name": "ReactElement"
            }
          }
        },
        {
          "name": "_renderFeatures",
          "docblock": null,
          "modifiers": [],
          "params": [
            {
              "name": "attributes",
              "type": {
                "name": "Array"
              }
            },
            {
              "name": "features",
              "type": {
                "name": "Object"
              }
            }
          ],
          "returns": null
        },
        {
          "name": "_renderProduct",
          "docblock": null,
          "modifiers": [],
          "params": [
            {
              "name": "prData",
              "type": {
                "name": "Object"
              }
            },
            {
              "name": "product",
              "type": {
                "name": "Object"
              }
            }
          ],
          "returns": {
            "type": {
              "name": "ReactElement"
            }
          }
        },
        {
          "name": "renderOriginal",
          "docblock": null,
          "modifiers": [],
          "params": [
            {
              "name": "prData",
              "type": {
                "name": "Object"
              }
            }
          ],
          "returns": {
            "type": {
              "name": "ReactElement"
            }
          }
        },
        {
          "name": "_renderComparisons",
          "docblock": null,
          "modifiers": [],
          "params": [
            {
              "name": "prData",
              "type": {
                "name": "Object"
              }
            }
          ],
          "returns": {
            "type": {
              "name": "ReactElement"
            }
          }
        }
      ],
      "props": {
        "productData": {
          "type": {
            "name": "array"
          },
          "required": false,
          "defaultValue": {
            "value": "[]",
            "computed": false
          },
          "description": "The product data"
        }
      },
      "fileName": "./src/components/comparison-large.jsx",
      "description": "Large factor comparison table.",
      "examples": "```jsx\n<Comparison.Large productData={comparisonData}/>\n```",
      "component": "Comparison.Large",
      "import": "{Comparison}",
      "playground": [
        {
          "title": "Comparison.Large",
          "flags": {},
          "code": "<Comparison.Large productData={comparisonData}/>\n"
        }
      ],
      "hasProps": true
    },
    {
      "description": "",
      "displayName": "Histogram.Bar",
      "methods": [],
      "props": {
        "count": {
          "type": {
            "name": "number"
          },
          "required": true,
          "description": "Count of ratings for the particular rating value"
        },
        "totalReviewCount": {
          "type": {
            "name": "number"
          },
          "required": true,
          "description": "Total number of reviews for the item"
        },
        "ratingValue": {
          "type": {
            "name": "number"
          },
          "required": true,
          "description": "The star rating value"
        },
        "onRatingClicked": {
          "type": {
            "name": "func"
          },
          "required": false,
          "description": "Callback to execute when the rating bar is clicked"
        },
        "active": {
          "type": {
            "name": "custom",
            "raw": "PropTypes.boolean"
          },
          "required": false,
          "description": "The current rating bar whose reviews are shown. If none, then all reviews are shown"
        }
      },
      "fileName": "./src/components/histogram-bar.jsx",
      "hasProps": true
    },
    {
      "methods": [],
      "props": {},
      "fileName": "./src/components/sticky-nav-row.jsx",
      "description": "StickyNav.Row is child element for Sticky Nav\n  <StickNav.Row>Tab Content</StickyNav.Row>",
      "hasProps": false
    },
    {
      "description": "",
      "methods": [],
      "props": {
        "usItemId": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "Product us item id"
        },
        "total": {
          "type": {
            "name": "number"
          },
          "required": true,
          "description": "The total number of stars (e.g. 5, 10)"
        },
        "average": {
          "type": {
            "name": "number"
          },
          "required": true,
          "description": "The average number of stars (e.g. 3)"
        },
        "count": {
          "type": {
            "name": "number"
          },
          "required": false,
          "description": "The count of reviews"
        }
      },
      "fileName": "./src/components/star-rating.jsx",
      "hasProps": true
    },
    {
      "description": "",
      "methods": [],
      "props": {
        "offerCount": {
          "type": {
            "name": "number"
          },
          "required": true,
          "description": "number of other sellers"
        },
        "isWMseller": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": "walmart is among marketplace sellers"
        },
        "usItemId": {
          "type": {
            "name": "number"
          },
          "required": true,
          "description": "walmart is among marketplace sellers"
        },
        "offers": {
          "type": {
            "name": "arrayOf",
            "value": {
              "name": "shape",
              "value": {
                "price": {
                  "name": "number",
                  "required": false
                },
                "isToday": {
                  "name": "bool",
                  "required": false
                },
                "freeShippingThresholdPrice": {
                  "name": "number",
                  "required": false
                },
                "shippable": {
                  "name": "bool",
                  "required": false
                },
                "shippingPass": {
                  "name": "bool",
                  "required": false
                },
                "pickupable": {
                  "name": "bool",
                  "required": false
                },
                "submapType": {
                  "name": "string",
                  "required": false
                },
                "isSOI": {
                  "name": "bool",
                  "required": false
                },
                "isWM": {
                  "name": "bool",
                  "required": false
                },
                "sellerName": {
                  "name": "string",
                  "required": false
                }
              }
            }
          },
          "required": false,
          "description": "array of offers"
        }
      },
      "fileName": "./src/components/products-secondary-bot.jsx",
      "hasProps": true
    },
    {
      "description": "",
      "methods": [],
      "props": {
        "reviewId": {
          "type": {
            "name": "number"
          },
          "required": false,
          "description": "Prop Types"
        },
        "reviewTitle": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": ""
        },
        "reviewText": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": ""
        },
        "reviewUrl": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": ""
        },
        "rating": {
          "type": {
            "name": "number"
          },
          "required": false,
          "description": ""
        },
        "reviewSubmissionTime": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": ""
        },
        "userNickname": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": ""
        },
        "badgeList": {
          "type": {
            "name": "array"
          },
          "required": false,
          "description": ""
        }
      },
      "fileName": "./src/components/products-review-summary.jsx",
      "hasProps": true
    },
    {
      "description": "",
      "methods": [],
      "props": {},
      "fileName": "./src/components/histogram.jsx",
      "hasProps": false
    },
    {
      "description": "",
      "displayName": "DetailedHeroImage",
      "methods": [
        {
          "name": "_renderImage",
          "docblock": null,
          "modifiers": [],
          "params": [
            {
              "name": "{imageUrl, title, imageWidth, imageHeight}",
              "type": null
            }
          ],
          "returns": {
            "type": {
              "name": "ReactElement"
            }
          }
        },
        {
          "name": "_renderDescription",
          "docblock": null,
          "modifiers": [],
          "params": [
            {
              "name": "title",
              "type": null
            },
            {
              "name": "description",
              "type": null
            },
            {
              "name": "onClick",
              "type": null
            }
          ],
          "returns": {
            "type": {
              "name": "ReactElement"
            }
          }
        },
        {
          "name": "_renderTitle",
          "docblock": null,
          "modifiers": [],
          "params": [
            {
              "name": "title",
              "type": null
            }
          ],
          "returns": {
            "type": {
              "name": "ReactElement"
            }
          }
        }
      ],
      "props": {
        "title": {
          "type": {
            "name": "string"
          },
          "required": true,
          "description": "The title of the item or collection."
        },
        "description": {
          "type": {
            "name": "string"
          },
          "required": true,
          "description": "The description of the item or collection."
        },
        "imageWidth": {
          "type": {
            "name": "number"
          },
          "required": false,
          "defaultValue": {
            "value": "450",
            "computed": false
          },
          "description": "The width of the hero image."
        },
        "imageHeight": {
          "type": {
            "name": "number"
          },
          "required": false,
          "defaultValue": {
            "value": "450",
            "computed": false
          },
          "description": "The height of the hero image."
        },
        "imageUrl": {
          "type": {
            "name": "string"
          },
          "required": true,
          "description": "This is a URL of the hero image."
        },
        "onClick": {
          "type": {
            "name": "func"
          },
          "required": false,
          "defaultValue": {
            "value": "() => {}",
            "computed": false
          },
          "description": "Click handler for read more link"
        }
      },
      "fileName": "./src/components/detailed-hero-image.jsx",
      "hasProps": true
    },
    {
      "displayName": "Comparison.Small",
      "methods": [],
      "props": {
        "productData": {
          "type": {
            "name": "array"
          },
          "required": false,
          "defaultValue": {
            "value": "[]",
            "computed": false
          },
          "description": "The product data"
        }
      },
      "fileName": "./src/components/comparison-small.jsx",
      "description": "Phone factor comparison table.",
      "examples": "```jsx\n<Comparison.Small productData={comparisonData}/>\n```",
      "component": "Comparison.Small",
      "import": "{Comparison}",
      "playground": [
        {
          "title": "Comparison.Small",
          "flags": {},
          "code": "<Comparison.Small productData={comparisonData}/>\n"
        }
      ],
      "hasProps": true
    },
    {
      "methods": [],
      "props": {},
      "fileName": "./src/components/products-bot.jsx",
      "description": "Basic container component for Buying Options Table.\nWhere Foo is any React component e.g. <ProductOffer />",
      "examples": "```jsx\n<div>\n  <ProductsBOT>\n    <ProductsBOT.Row><div className=\"foo\">Node Module 1</div></ProductsBOT.Row>\n    <ProductsBOT.Row><div className=\"foo\">Node Module 2</div></ProductsBOT.Row>\n    <ProductsBOT.Row showBottomBorder={false}>\n      <div className=\"foo\">Node Module 3</div>\n    </ProductsBOT.Row>\n    <ProductsBOT.Row showBottomBorder={false}>\n      <div className=\"foo\">Node Module 4</div>\n    </ProductsBOT.Row>\n  </ProductsBOT>\n</div>\n```",
      "component": "ProductsBOT",
      "import": "{ProductsBOT}",
      "playground": [
        {
          "title": "ProductsBot",
          "flags": {},
          "code": "<div>\n  <ProductsBOT>\n    <ProductsBOT.Row><div className=\"foo\">Node Module 1</div></ProductsBOT.Row>\n    <ProductsBOT.Row><div className=\"foo\">Node Module 2</div></ProductsBOT.Row>\n    <ProductsBOT.Row showBottomBorder={false}>\n      <div className=\"foo\">Node Module 3</div>\n    </ProductsBOT.Row>\n    <ProductsBOT.Row showBottomBorder={false}>\n      <div className=\"foo\">Node Module 4</div>\n    </ProductsBOT.Row>\n  </ProductsBOT>\n</div>\n"
        }
      ],
      "hasProps": false
    },
    {
      "methods": [],
      "props": {
        "showBottomBorder": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "true",
            "computed": false
          },
          "description": "Hide the bottom border style"
        },
        "colored": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": "Adds a background color to the bot row."
        }
      },
      "fileName": "./src/components/products-bot-row.jsx",
      "description": "Wraps a ProductsBOT.Row cell.",
      "import": "{ProductsBOT}",
      "component": "ProductsBOT.Row",
      "references": "ProductsBOT",
      "playground": [
        {
          "title": "",
          "flags": {},
          "code": "<ProductsBOT>\n  <ProductsBOT.Row><div className=\"foo\">Node Module 1</div></ProductsBOT.Row>\n  <ProductsBOT.Row showBottomBorder={false}>\n    <div className=\"foo\">Node Module 2</div>\n  </ProductsBOT.Row>\n</ProductsBOT>\n"
        }
      ],
      "returns": "A React Element",
      "hasProps": true
    }
  ]
}