/*!
Price

Component for presenting prices in a consistent way. Successor to the deprecated
`.price-display` component.

### Price style

By default, the `.Price` component will not hide or otherwise treat
`.Price-mark`, `.Price-sup` or `.Price-sub`. This is to preserve
readability for smaller screen sizes.

Use the `.Price--stylized` modifier to apply this treatment.

An alternative to the `.Price--stylized` modifier is the
[`.Price--flair` treatment](#price-flair).

### Price color

Use the Text Color Themes to set color. Example: `.u-textBlue`

### Price sizes

On its own, the `.Price` component will inherit the `font-size` of its parent.
You can use the following modifiers to increase its relative size:

- `.Price--medium`: 1.125 times larger than parent font size (ie `18px`).
- `.Price--large`: 1.5 times larger than parent font size.
- `.Price--larger`: 2 times larger than parent font size.
- `.Price--largest`: 2.5 times larger than parent font size.

### Responsive price modifiers

Append any of the standard breakpoint abbreviations to these modifiers to
apply them at a specific breakpoint. For example:

- `.Price--stylized-m`: Stylize `.Price` starting at `$breakpoint-m`.
- `.Price--large-l`: Make `.Price` 1.5 times larger starting at `$breakpoint-l`.

.Price--stylized                                - Stylized
.Price--stylized.Price--medium                  - Stylized and medium
.Price--stylized.Price--large                   - Stylized and large
.Price--stylized.Price--larger                  - Stylized and larger
.Price--stylized.Price--largest                 - Stylized and largest
.Price--large.Price--larger-m.Price--stylized-m - Responsive example

Styleguide 10.4
*/

/*!
Price Flair

The `.Price--flair` is a new modifier on the `.Price` component.
Use it as you would use the `.Price--stylized` modifier.

This new treatment follows the new UX guidelines.

### Usage
```
<span class="Price Price--flair">
  {{displayPrice 34 flair=true}}
</span>
```


### Price sizes

On its own, the `.Price` component will inherit the `font-size` of its parent.
You can use the following modifiers to increase its relative size:

- `.Price--medium`: 1.125 times larger than parent font size (ie `18px` for base `16px`).
- `.Price--large`: 1.5 times larger than parent font size.
- `.Price--larger`: 2 times larger than parent font size.
- `.Price--largest`: 2.5 times larger than parent font size.

### Responsive price modifiers

Append any of the standard breakpoint abbreviations to these modifiers to
apply them at a specific breakpoint. For example:

- `.Price--flair-m`: Stylize `.Price` starting at `$breakpoint-m`.
- `.Price--large-l`: Make `.Price` 1.5 times larger starting at `$breakpoint-l`.

.Price--flair                                - Stylized
.Price--flair.Price--medium                  - Stylized and medium
.Price--flair.Price--large                   - Stylized and large
.Price--flair.Price--larger                  - Stylized and larger
.Price--flair.Price--largest                 - Stylized and largest
.Price--large.Price--larger-m.Price--flair-m - Responsive example

Styleguide 10.4.1
*/

// Mixin for making .Price--* modifiers. Avoids repetition when creating
// breakpoint-specific classes.
make-Price-modifier(
  $fontWeight = false,
  $letterSpacing = false,
  $supWeight = false,
  $showMark = false,
  $supSize = 0.5625em,
  $supOffset = -0.5em,
  $subWeight = false,
  $subSize = 0.6875em,
  $markSize = 0.1em,
  $baseSize = 1em) {

  if ($fontWeight) {
    font-weight: $fontWeight;
  }

  if ($letterSpacing) {
    letter-spacing: $letterSpacing;
  }

  // Superscript element
  .Price-currency,
  .Price-mantissa {
    font-size: $supSize;

    if $supWeight {
      font-weight: $supWeight;
    }

    if $supOffset {
      // This technique for "superscript" scales better than vertical-align,
      // and won't impact the containing element's `line-height`.
      // See: https://css-tricks.com/snippets/css/prevent-superscripts-and-subscripts-from-affecting-line-height/
      top: $supOffset;
    }
  }

  // Subscript elements
  .Price-sub {
    font-size: $subSize;

    if $subWeight {
      font-weight: $subWeight;
    }
  }

  unless $showMark {
    // Decimal mark
    .Price-mark {
      // Bumps any decimals that follow over without resorting to `margin-left`.
      font-size: $markSize;

      // Allows us to visually hide the mark without completely managing layout of
      // surrounding elements manually (see `font-size`).
      opacity: 0;
    }
  }
}

// Mixin for making proportional size modifiers for `.Price`. The main reason
// for this is so `.Price-message` elements retain the parent size and are
// positioned closer to the center of the element (rather than the baseline,
// which would look funny).
make-Price--proportionalSize($size) {
  font-size: $size;

  if $size > 1em {
    $messageSize = (1 / $size);

    .Price-message {
      top: (($size - $messageSize) / -2 * $messageSize);

      font-size: $messageSize;
    }
  }

}

// Price component
.Price {
  line-height: 1;
  font-weight: 700;
  // Although typically numeric, we want text like "FREE" to be uppercase.
  text-transform: uppercase;

  // For "Loading..." messages and similar.
  .Price-message {
    text-transform: none;
  }

  .Price-currency,
  .Price-mantissa,
  .Price-message {
    // Apply this by default to cut down on repetition in modifiers while also
    // making it easier for track devs to adjust position themselves.
    position: relative;
  }

  .Price-currency {
    font-size: 0.5625em;
    top: -0.5em;
  }

  .Price-message.oos {
    to-rem(font-size, 13px);

    vertical-align: sub;
    color: $black;

    +breakpoint($breakpoint-m) {
      to-rem(font-size, 14px);

      top: 5px;
      vertical-align: top;
    }
  }

  &.Price--unavailable {
    @extend .font-semibold;
    to-rem(font-size, 24px);

    text-transform: none;
    color: inherit;
    text-align: left;

    +breakpoint($breakpoint-m) {
      to-rem(font-size, 32px);
    }
  }
}

// Modifiers: Stylized price
.Price--stylized {
  make-Price-modifier(false, false, 600);
}

for $size in $responsive-breakpoint-sizes {
  .Price--stylized-{$size} {
    +breakpoint($responsive-breakpoint-sizes[$size]) {
      make-Price-modifier(false, false, 600);
    }
  }
}

// Modifiers: Price sizes
$responsive-price-sizes = {
  medium: 1.125em,
  large: 1.5em,
  larger: 2em,
  largest: 2.5em
};

for $suffix in $responsive-price-sizes {
  .Price--{$suffix} {
    make-Price--proportionalSize($responsive-price-sizes[$suffix]);
  }

  for $size in $responsive-breakpoint-sizes {
    .Price--{$suffix}-{$size} {
      +breakpoint($responsive-breakpoint-sizes[$size]) {
        make-Price--proportionalSize($responsive-price-sizes[$suffix]);
      }
    }
  }
}
