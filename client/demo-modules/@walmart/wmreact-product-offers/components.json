{
  "library": "@walmart/wmreact-product-offers",
  "description": "A set of react components for the product offers",
  "components": [
    {
      "description": "",
      "methods": [],
      "props": {
        "primaryShippingPrice": {
          "type": {
            "name": "number"
          },
          "required": false,
          "description": "This is shipping price"
        },
        "secondaryMessage": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "This is secondary shipping message"
        },
        "logo": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "logo to be displayed"
        },
        "currency": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "Currency to fed in as currency symbols\nCan also use the ISO code for currency, but will not be translated to currency symbol"
        },
        "secondaryShippingPrice": {
          "type": {
            "name": "number"
          },
          "required": false,
          "description": "Price if we have any for secondary message"
        },
        "showPlus": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": "true if we have to show \"+\" before message"
        }
      },
      "fileName": "./src/components/product-shipping-price.jsx",
      "hasProps": true
    },
    {
      "description": "",
      "methods": [],
      "props": {
        "price": {
          "type": {
            "name": "number"
          },
          "required": true,
          "defaultValue": {
            "value": "0",
            "computed": false
          },
          "description": "Product hero price"
        },
        "currency": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"$\"",
            "computed": false
          },
          "description": "Currency to fed in as currency symbols\nCan also use the ISO code for currency, but will not be translated to currency symbol"
        },
        "shippingPrice": {
          "type": {
            "name": "number"
          },
          "required": false,
          "description": "Shipping price"
        },
        "pickupable": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": "Flag when product is pickable"
        },
        "pickupToday": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": "Flag when product is eligible for pickup today"
        },
        "freeShippingThresholdPrice": {
          "type": {
            "name": "number"
          },
          "required": false,
          "description": "Price if product is threshold shipping eligible"
        },
        "shippable": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": "Flag when product is shippable"
        },
        "isFreight": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": "Flag when product is eligible for Freight delivery"
        },
        "shippingPass": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": "Flag when product is shipping pass eligible"
        },
        "showPlus": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": "true if we have to show \"+\" before message"
        }
      },
      "fileName": "./src/components/product-seller-offer.jsx",
      "hasProps": true
    },
    {
      "description": "",
      "methods": [],
      "props": {
        "currency": {
          "type": {
            "name": "string"
          },
          "required": true,
          "description": "Currency to fed in as currency symbols\nCan also use the ISO code for currency, but will not be translated to currency symbol"
        },
        "displayRange": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": "Boolean to determine if we display price as a range or standalone price"
        },
        "type": {
          "type": {
            "name": "string"
          },
          "required": true,
          "description": "The label of secondary price."
        },
        "oldPrice": {
          "type": {
            "name": "number"
          },
          "required": true,
          "description": "Old Price to display"
        },
        "minOldPrice": {
          "type": {
            "name": "number"
          },
          "required": false,
          "description": "Old Price to display"
        },
        "maxOldPrice": {
          "type": {
            "name": "number"
          },
          "required": false,
          "description": "Old Price to display"
        },
        "savePrice": {
          "type": {
            "name": "number"
          },
          "required": true,
          "description": "Save Price to display"
        },
        "outOfStock": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": "Is it Out of stock?"
        }
      },
      "fileName": "./src/components/product-secondary-price.jsx",
      "hasProps": true
    },
    {
      "displayName": "ProductOffer",
      "methods": [
        {
          "name": "_renderUrgencyMessage",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": {
            "type": {
              "name": "ReactElement"
            }
          }
        },
        {
          "name": "_renderStatusComponent",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": {
            "type": {
              "name": "ReactElement",
              "nullable": true
            }
          }
        },
        {
          "name": "_renderPreorderMsgComp",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": {
            "type": {
              "name": "ReactElement",
              "nullable": true
            }
          }
        },
        {
          "name": "_renderSecondaryPriceComp",
          "docblock": null,
          "modifiers": [],
          "params": [
            {
              "name": "options",
              "type": null
            }
          ],
          "returns": {
            "type": {
              "name": "ReactElement",
              "nullable": true
            }
          }
        },
        {
          "name": "_renderPPUComp",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": {
            "type": {
              "name": "ReactElement",
              "nullable": true
            }
          }
        },
        {
          "name": "_renderStoreInfoComp",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": {
            "type": {
              "name": "ReactElement",
              "nullable": true
            }
          }
        },
        {
          "name": "_renderWasPrice",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": {
            "type": {
              "name": "ReactElement",
              "nullable": true
            }
          }
        },
        {
          "name": "_renderListPrice",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": {
            "type": {
              "name": "ReactElement",
              "nullable": true
            }
          }
        },
        {
          "name": "_renderPriceFlags",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": {
            "type": {
              "name": "ReactElement",
              "nullable": true
            }
          }
        },
        {
          "name": "_renderPrice",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": {
            "type": {
              "name": "ReactElement"
            }
          }
        },
        {
          "name": "_renderFulfillmentSection",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": {
            "type": {
              "name": "ReactElement",
              "nullable": true
            }
          }
        },
        {
          "name": "_renderFirstRow",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": {
            "type": {
              "name": "ReactElement"
            }
          }
        },
        {
          "name": "_renderSecondRow",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": {
            "type": {
              "name": "ReactElement"
            }
          }
        },
        {
          "name": "_renderThirdRow",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": {
            "type": {
              "name": "ReactElement",
              "nullable": true
            }
          }
        },
        {
          "name": "_renderInvalidState",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": {
            "type": {
              "name": "ReactElement"
            }
          }
        }
      ],
      "props": {
        "price": {
          "type": {
            "name": "number"
          },
          "required": false,
          "defaultValue": {
            "value": "0",
            "computed": false
          },
          "description": "Primary price of the product"
        },
        "displayRange": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": "Boolean to determine if we display price as a range or standalone price"
        },
        "minPrice": {
          "type": {
            "name": "number"
          },
          "required": false,
          "defaultValue": {
            "value": "0",
            "computed": false
          },
          "description": "Min Price of the offer"
        },
        "maxPrice": {
          "type": {
            "name": "number"
          },
          "required": false,
          "defaultValue": {
            "value": "0",
            "computed": false
          },
          "description": "Max price of the offer"
        },
        "currency": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"$\"",
            "computed": false
          },
          "description": "Primary currency unit of the product price"
        },
        "savingsPrice": {
          "type": {
            "name": "number"
          },
          "required": false,
          "defaultValue": {
            "value": "0",
            "computed": false
          },
          "description": "Savings price of product"
        },
        "listPrice": {
          "type": {
            "name": "number"
          },
          "required": false,
          "defaultValue": {
            "value": "0",
            "computed": false
          },
          "description": "List price of product"
        },
        "minListPrice": {
          "type": {
            "name": "number"
          },
          "required": false,
          "defaultValue": {
            "value": "0",
            "computed": false
          },
          "description": "Min List price of product"
        },
        "maxListPrice": {
          "type": {
            "name": "number"
          },
          "required": false,
          "defaultValue": {
            "value": "0",
            "computed": false
          },
          "description": "Max List price of product"
        },
        "wasPrice": {
          "type": {
            "name": "number"
          },
          "required": false,
          "defaultValue": {
            "value": "0",
            "computed": false
          },
          "description": "Was price of product"
        },
        "minWasPrice": {
          "type": {
            "name": "number"
          },
          "required": false,
          "defaultValue": {
            "value": "0",
            "computed": false
          },
          "description": "Min Was price of product"
        },
        "maxWasPrice": {
          "type": {
            "name": "number"
          },
          "required": false,
          "defaultValue": {
            "value": "0",
            "computed": false
          },
          "description": "Max Was price of product"
        },
        "unitPrice": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"\"",
            "computed": false
          },
          "description": "Price per unit of product"
        },
        "availabilityStatus": {
          "type": {
            "name": "enum",
            "computed": true,
            "value": "Object.keys(availabilityStatuses)"
          },
          "required": false,
          "defaultValue": {
            "value": "availabilityStatuses.IN_STOCK",
            "computed": true
          },
          "description": "Availability status of the product"
        },
        "storeName": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"\"",
            "computed": false
          },
          "description": "Store Name of the product"
        },
        "shippable": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": "Flag that determines if the product is shippable"
        },
        "shippingPrice": {
          "type": {
            "name": "number"
          },
          "required": false,
          "defaultValue": {
            "value": "0",
            "computed": false
          },
          "description": "Shipping price, default value is 0, indicating its free shipping."
        },
        "pickupable": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": "Flag that determines if the product is pickupable"
        },
        "pickupToday": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": "Flag that determines if the product is pickupable today"
        },
        "preorder": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": "Flag that determines if the product is preorder"
        },
        "freeShippingThresholdPrice": {
          "type": {
            "name": "number"
          },
          "required": false,
          "defaultValue": {
            "value": "0",
            "computed": false
          },
          "description": "Shipping threshold price"
        },
        "priceFlags": {
          "type": {
            "name": "array"
          },
          "required": false,
          "defaultValue": {
            "value": "[]",
            "computed": false
          },
          "description": "List of price flags of the product"
        },
        "isAValidOffer": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "true",
            "computed": false
          },
          "description": "Determines if the current state offer is invalid.\nWe use this flag to render an invalid state when an invalid variant combo is selected"
        },
        "seoProps": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": "A flag to pass SEO props.\n  Should only be called once to avoid duplicate props."
        },
        "itemsLeft": {
          "type": {
            "name": "number"
          },
          "required": false,
          "defaultValue": {
            "value": "0",
            "computed": false
          },
          "description": "Total number of items left in stock"
        }
      },
      "fileName": "./src/components/product-offer.jsx",
      "description": "The main offer component component. Used to display the\n - Product pricecd\n - Product status: out of stock\n - Price per unit\n - store name\n - secondary price: was, list, savings prices\n - fulfillment info: shipping pass, shipping, pickup.\n For example this is how we use this component.\n ```jsx\n <ProductOffer price={100.99}\n   currency=\"$\"\n   minPrice={100}\n   maxPrice={1000.00}\n   displayRange={true}\n   savingsPrice=\"$10.00\"\n   listPrice=\"$110.99\"\n   unitPrice=\"89.7¢ / oz\"\n   storeName=\"Mountain view\"\n   shippable={true}\n   pickupable={true}\n   pickupToday={true}\n   freeShippingThresholdPrice=\"$35\"\n   priceFlags={[\"clearance\", \"rollback\"]}/>\n ```",
      "import": "{ProductOffer}",
      "flags": "noVisibleRender",
      "component": "ProductOffer",
      "playground": [
        {
          "title": "ProductOffer",
          "flags": {},
          "code": " <div>\n <ProductOffer price={100.99}\n   currency=\"$\"\n   minPrice={100}\n   maxPrice={1000.00}\n   displayRange={true}\n   savingsPrice=\"$10.00\"\n   listPrice=\"$110.99\"\n   unitPrice=\"89.7¢ / oz\"\n   storeName=\"Mountain view\"\n   shippable={true}\n   pickupable={true}\n   pickupToday={true}\n   freeShippingThresholdPrice=\"$35\"\n   priceFlags={[\"clearance\", \"rollback\"]}/>\n </div>\n "
        }
      ],
      "hasProps": true
    },
    {
      "description": "",
      "methods": [],
      "props": {
        "displayRange": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": "Boolean to determine if we display price as a range or standalone price"
        },
        "minPrice": {
          "type": {
            "name": "number"
          },
          "required": false,
          "description": "Min Price of the offer"
        },
        "maxPrice": {
          "type": {
            "name": "number"
          },
          "required": false,
          "description": "Max price of the offer"
        },
        "price": {
          "type": {
            "name": "number"
          },
          "required": false,
          "description": "Actual price of the offer"
        },
        "autoId": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "automationId"
        },
        "currency": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "Primary currency unit of the product price"
        },
        "availabilityStatus": {
          "type": {
            "name": "enum",
            "computed": true,
            "value": "Object.keys(availabilityStatuses)"
          },
          "required": false,
          "description": "Availability status of the product"
        },
        "seoProps": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": "A flag to pass SEO props.\n    Should only be called once to avoid duplicate props."
        }
      },
      "fileName": "./src/components/product-offer-price.jsx",
      "hasProps": true
    },
    {
      "displayName": "ProductOfferFulfillment",
      "methods": [
        {
          "name": "_getPriceClassNames",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": null
        },
        {
          "name": "_getHelpIconClasses",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": null
        },
        {
          "name": "_renderHelpText",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": {
            "type": {
              "name": "ReactElement"
            }
          }
        },
        {
          "name": "_renderHelpFlyout",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": {
            "type": {
              "name": "ReactElement",
              "nullable": true
            }
          }
        },
        {
          "name": "_renderFreeShippingThresholdPrice",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": {
            "type": {
              "name": "ReactElement",
              "nullable": true
            }
          }
        },
        {
          "name": "_renderFulfillmentComp",
          "docblock": null,
          "modifiers": [],
          "params": [
            {
              "name": "primaryText",
              "type": null
            },
            {
              "name": "secondaryText",
              "type": null
            }
          ],
          "returns": {
            "type": {
              "name": "ReactElement"
            }
          }
        },
        {
          "name": "_renderShippingComp",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": {
            "type": {
              "name": "ReactElement"
            }
          }
        },
        {
          "name": "_renderPickupComp",
          "docblock": null,
          "modifiers": [],
          "params": [],
          "returns": {
            "type": {
              "name": "ReactElement"
            }
          }
        }
      ],
      "props": {
        "shippable": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": "Flag that determines if the product is shippable"
        },
        "pickupable": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": "Flag that determines if the product is pickupable"
        },
        "pickupToday": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": "Flag that determines if the product is pickupable today"
        },
        "currency": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"$\"",
            "computed": false
          },
          "description": "Currency to fed in as currency symbols\nCan also use the ISO code for currency, but will not be translated to currency symbol"
        },
        "freeShippingThresholdPrice": {
          "type": {
            "name": "number"
          },
          "required": false,
          "description": "The shipping threshold price"
        },
        "shippingPrice": {
          "type": {
            "name": "number"
          },
          "required": false,
          "defaultValue": {
            "value": "0",
            "computed": false
          },
          "description": "Shipping price, default value is 0, indicating its free shipping."
        }
      },
      "fileName": "./src/components/product-offer-fulfillment.jsx",
      "description": "The offer fulfillment section. Displays\n - shipping pass (todo: this needs to be implemented)\n - shipping info\n -pickup info\n\n For example this is how we use this component.\n\n ```jsx\n <ProductOfferFulfillment shippable={true}\n pickupable={true}\n pickupToday={true}\n freeShippingThresholdPrice=\"$35\"/>\n ```",
      "import": "{ProductOfferFulfillment}",
      "flags": "noVisibleRender",
      "component": "ProductOfferFulfillment",
      "playground": [
        {
          "title": "ProductOfferFulfillment",
          "flags": {},
          "code": " <ProductOfferFulfillment shippable={true}\n pickupable={true}\n pickupToday={true}\n freeShippingThresholdPrice=\"$35\"/>\n "
        }
      ],
      "hasProps": true
    },
    {
      "description": "",
      "displayName": "ProductDelivery",
      "methods": [],
      "props": {
        "isWM": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": "if the seller is walmart"
        },
        "isToday": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": "if it can be picked up today"
        },
        "isUpsell": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "true",
            "computed": false
          },
          "description": "it could be shipped earlier"
        },
        "minDate": {
          "type": {
            "name": "number"
          },
          "required": true,
          "description": "unix time for the earliest delivery date"
        },
        "maxDate": {
          "type": {
            "name": "number"
          },
          "required": true,
          "description": "unix time for the latest delivery date"
        },
        "storeName": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"\"",
            "computed": false
          },
          "description": "walmart store name"
        }
      },
      "fileName": "./src/components/product-delivery.jsx",
      "hasProps": true
    },
    {
      "description": "",
      "methods": [],
      "props": {
        "currency": {
          "type": {
            "name": "string"
          },
          "required": true,
          "description": "Currency to fed in as currency symbols\nCan also use the ISO code for currency, but will not be translated to currency symbol"
        },
        "minPrice": {
          "type": {
            "name": "number"
          },
          "required": true,
          "description": "Min price to display"
        },
        "maxPrice": {
          "type": {
            "name": "number"
          },
          "required": true,
          "description": "Max price to display"
        },
        "type": {
          "type": {
            "name": "enum",
            "value": [
              {
                "value": "HERO",
                "computed": true
              },
              {
                "value": "OLD",
                "computed": true
              },
              {
                "value": "SAVE",
                "computed": true
              },
              {
                "value": "SUB",
                "computed": true
              },
              {
                "value": "SUP",
                "computed": true
              },
              {
                "value": "PPU",
                "computed": true
              }
            ]
          },
          "required": false,
          "description": "Determines what type of price range to render"
        },
        "typeLabel": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "Label if the price range is Old"
        },
        "seoPriceProp": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "The name of the SEO price prop"
        },
        "outOfStock": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": ""
        },
        "unit": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": ""
        }
      },
      "fileName": "./src/components/price-range.jsx",
      "hasProps": true
    }
  ]
}