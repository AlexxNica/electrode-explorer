{
  "library": "@walmart/wmreact-product-typography",
  "description": "Typography components for the Product and related pages.",
  "components": [
    {
      "description": "",
      "methods": [],
      "props": {
        "serverLineHeight": {
          "type": {
            "name": "union",
            "value": [
              {
                "name": "string"
              },
              {
                "name": "number"
              }
            ]
          },
          "required": false,
          "defaultValue": {
            "value": "1.5",
            "computed": false
          },
          "description": "The CSS `line-height` to use when visually truncating text in a\n   server-side render."
        },
        "text": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "The text to (potentially) truncate; passed along to `react-text-truncate`."
        },
        "line": {
          "type": {
            "name": "number"
          },
          "required": false,
          "description": "The maximum number of lines to render; passed along to `react-text-truncate`."
        },
        "doInsertHTMLTitle": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "description": "A flag to enable title inserted as HTML"
        }
      },
      "fileName": "./src/components/text-truncate.jsx",
      "hasProps": true
    },
    {
      "description": "",
      "methods": [],
      "props": {
        "legalBadgeLabel": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "Legal badge label."
        },
        "brandName": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "The brand name."
        },
        "qAndALabel": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "Q & A label. Defaults to Q&A"
        },
        "onQAndAClick": {
          "type": {
            "name": "func"
          },
          "required": false,
          "description": "On click callback handler for Q&A button"
        },
        "starsSize": {
          "type": {
            "name": "enum",
            "value": [
              {
                "value": "\"small\"",
                "computed": false
              },
              {
                "value": "\"medium\"",
                "computed": false
              },
              {
                "value": "\"large\"",
                "computed": false
              }
            ]
          },
          "required": false,
          "description": "Size of the reviews star component. Defaults to medium."
        },
        "emptyReviewLabel": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "Label to render when review count is 0. Defaults to Write a review."
        },
        "onStarsClick": {
          "type": {
            "name": "func"
          },
          "required": false,
          "description": "Click handler for stars."
        },
        "onReviewsClick": {
          "type": {
            "name": "func"
          },
          "required": false,
          "description": "Click handler for reviews count"
        },
        "total": {
          "type": {
            "name": "number"
          },
          "required": false,
          "description": "The total number of stars (e.g. 5, 10)"
        },
        "average": {
          "type": {
            "name": "number"
          },
          "required": false,
          "description": "The average number of stars (e.g. 3)"
        },
        "reviewsLabel": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "Label for the reviews count section. Defaults to reviews"
        },
        "count": {
          "type": {
            "name": "custom",
            "raw": "PropTypes"
          },
          "required": false,
          "description": "The count of reviews"
        }
      },
      "fileName": "./src/components/product-secondary-information.jsx",
      "hasProps": true
    },
    {
      "methods": [],
      "props": {
        "badgeLabel": {
          "type": {
            "name": "string"
          },
          "required": false,
          "description": "The legal badge label."
        }
      },
      "fileName": "./src/components/product-legal-badge.jsx",
      "description": "The legal badge component.",
      "examples": "```\n<ProductLegalBadge badgeLabel=\"PG-13\" className=\"foo\" />\n```",
      "return": "Element tree",
      "param": "Props",
      "component": "ProductLegalBadge",
      "import": "{ProductLegalBadge}",
      "playground": [
        {
          "title": "ProductLegalBadge",
          "flags": {},
          "code": "<ProductLegalBadge badgeLabel=\"PG-13\" className=\"foo\" />\n"
        }
      ],
      "hasProps": true
    },
    {
      "displayName": "ProductShortDescription",
      "methods": [],
      "props": {
        "content": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"\"",
            "computed": false
          },
          "description": "The content aka the short descrition of the product."
        },
        "moreInfoLabel": {
          "type": {
            "name": "string"
          },
          "required": false,
          "defaultValue": {
            "value": "\"More about this item...\"",
            "computed": false
          },
          "description": "Label for the long description link."
        },
        "onClick": {
          "type": {
            "name": "func"
          },
          "required": false,
          "defaultValue": {
            "value": "() => {}",
            "computed": false
          },
          "description": "Onclick handler for more info button."
        },
        "big": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": "Use larger font size"
        },
        "removeMoreInfoLabel": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": "A flag that determines if the more info label should be removed"
        }
      },
      "fileName": "./src/components/product-short-description.jsx",
      "description": "Display the short description an an anchor link to\n the long description.section\n\n For example this is how we use this component.\n\n ```jsx\n <ProductShortDescription\n moreInfoLabel=\"More about this item...\"\n content={\"<li>Plugs into your HDTV<li>Streams media from laptops, tablets and smartphones\"}/>\n ```",
      "return": "Element tree",
      "param": "Props",
      "import": "{ProductShortDescription}",
      "flags": "noVisibleRender",
      "component": "ProductShortDescription",
      "playground": [
        {
          "title": "ProductShortDescription",
          "flags": {},
          "code": " <ProductShortDescription\n moreInfoLabel=\"More about this item...\"\n content={\"<li>Plugs into your HDTV<li>Streams media from laptops, tablets and smartphones\"} />\n "
        }
      ],
      "hasProps": true
    },
    {
      "methods": [],
      "props": {
        "storeName": {
          "type": {
            "name": "string"
          },
          "required": true,
          "description": ""
        }
      },
      "fileName": "./src/components/product-store-info-label.jsx",
      "description": "This is a clickable button that specifies a store.\n\n ```jsx\n <ProductStoreInfoLabel\n  storeName=\"Mountain View\"\n />\n ```",
      "return": "Element tree",
      "param": "Props",
      "import": "{ProductStoreInfoLabel}",
      "component": "ProductStoreInfoLabel",
      "playground": [
        {
          "title": "ProductStoreInfoLabel",
          "flags": {},
          "code": " <div>\n  <ProductStoreInfoLabel\n    storeName=\"Mountain View\"\n  />\n </div>\n "
        }
      ],
      "hasProps": true
    },
    {
      "displayName": "ProductTitle",
      "methods": [],
      "props": {
        "title": {
          "type": {
            "name": "string"
          },
          "required": true,
          "description": "The name or title of the product."
        },
        "big": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": "Use larger font size"
        },
        "maxLines": {
          "type": {
            "name": "number"
          },
          "required": false,
          "description": "Max number of lines to show before truncating"
        },
        "doInsertHTMLTitle": {
          "type": {
            "name": "bool"
          },
          "required": false,
          "defaultValue": {
            "value": "false",
            "computed": false
          },
          "description": "A flag to enable title rendering using inner html"
        }
      },
      "fileName": "./src/components/product-title.jsx",
      "description": "The product title or name for a give product.\nPer UX spec, this title has a font-size of 18px by default, 20px on breakpoint-s\nand 25px font-size on breakpoint-m or above.\n\nFor example this is how we use this component.\n\n```jsx\n<ProductTitle title=\"MagLite 4 D-Cell Flashlight\"/>\n```",
      "return": "Element tree",
      "param": "Props",
      "import": "{ProductTitle}",
      "flags": "noVisibleRender",
      "component": "ProductTitle",
      "playground": [
        {
          "title": "ProductTitle",
          "flags": {},
          "code": "<ProductTitle title=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\nCurabitur volutpat efficitur nisi. Mauris sodales, elit quis varius tincidunt,\nelit justo.\" maxLines={2}/>\n"
        }
      ],
      "hasProps": true
    }
  ]
}